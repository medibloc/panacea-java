buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}

plugins {
    id 'idea'
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'com.google.protobuf' version '0.8.8'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.7.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.22.1'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
        ofSourceSet('main')
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
}

idea {
    module {
        sourceDirs += file("${projectDir}/src/generated/main/java");
        sourceDirs += file("${projectDir}/src/generated/main/grpc");
    }
}

group 'org.medibloc.panacea'
version '2.0.0'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.bitcoinj:bitcoinj-core:0.14.7'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.google.protobuf:protobuf-java:3.6.1'
    implementation 'org.usb4java:usb4java:1.2.0'
    implementation 'org.projectlombok:lombok:1.18.8'
    implementation 'commons-codec:commons-codec:1.12'
    implementation 'commons-net:commons-net:3.6'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
    implementation 'io.grpc:grpc-protobuf:1.22.1'
    implementation 'io.grpc:grpc-netty-shaded:1.22.1'
    implementation 'io.grpc:grpc-stub:1.22.1'
    testImplementation 'junit:junit:4.12'
}

test {
    //TODO: enable this test when the panacea-core docker image is ready
    exclude 'org/medibloc/panacea/PanaceaApiRestClientTest.class'
}

publishing {
    repositories {
        maven {
            url = uri("https://maven.pkg.github.com/medibloc/panacea-java")
            credentials {
                username = System.getenv("GPR_USER")
                password = System.getenv("GPR_API_KEY")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
