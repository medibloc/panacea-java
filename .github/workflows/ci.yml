# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: ci

on:
  push:
    branches:    # only for pushes on master
    - master
  pull_request:  # for all PRs regardless of their base branch

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build panacea-core
      env:
        OWNER_MNEMONIC: ${{ secrets.OWNER_MNEMONIC }}
        RECIPIENT_MNEMONIC: ${{ secrets.RECIPIENT_MNEMONIC }}
        DOCKER_NAME: panacea-core-${{ github.sha }}
        DOCKER_TAG: panacea-core:${{ github.sha }}
      run: |
        echo "OWNER_MNEMONIC=${OWNER_MNEMONIC}"
        echo "RECIPIENT_MNEMONIC=${RECIPIENT_MNEMONIC}"
        pwd
        ls
        ls /
        docker build -f src/test/resources/scripts/Dockerfile -t ${DOCKER_TAG} .
        docker run -d -e \
          "OWNER_MNEMONIC=${OWNER_MNEMONIC}" \
          -e "RECIPIENT_MNEMONIC=${RECIPIENT_MNEMONIC}" \
          -p 9090:9090 \
          --name ${DOCKER_NAME} \
          ${DOCKER_TAG}
        docker exec ${DOCKER_NAME} panacead keys show validator
        docker exec ${DOCKER_NAME} panacead keys show recipientAccount

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build + Test
      env:
        OWNER_MNEMONIC: ${{ secrets.OWNER_MNEMONIC }}
        RECIPIENT_MNEMONIC: ${{ secrets.RECIPIENT_MNEMONIC }}
      run: ./gradlew build
