// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: confio/proofs.proto

package ics23;

public interface ProofSpecOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ics23.ProofSpec)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * any field in the ExistenceProof must be the same as in this spec.
   * except Prefix, which is just the first bytes of prefix (spec can be longer)
   * </pre>
   *
   * <code>.ics23.LeafOp leaf_spec = 1;</code>
   */
  boolean hasLeafSpec();
  /**
   * <pre>
   * any field in the ExistenceProof must be the same as in this spec.
   * except Prefix, which is just the first bytes of prefix (spec can be longer)
   * </pre>
   *
   * <code>.ics23.LeafOp leaf_spec = 1;</code>
   */
  ics23.LeafOp getLeafSpec();
  /**
   * <pre>
   * any field in the ExistenceProof must be the same as in this spec.
   * except Prefix, which is just the first bytes of prefix (spec can be longer)
   * </pre>
   *
   * <code>.ics23.LeafOp leaf_spec = 1;</code>
   */
  ics23.LeafOpOrBuilder getLeafSpecOrBuilder();

  /**
   * <code>.ics23.InnerSpec inner_spec = 2;</code>
   */
  boolean hasInnerSpec();
  /**
   * <code>.ics23.InnerSpec inner_spec = 2;</code>
   */
  ics23.InnerSpec getInnerSpec();
  /**
   * <code>.ics23.InnerSpec inner_spec = 2;</code>
   */
  ics23.InnerSpecOrBuilder getInnerSpecOrBuilder();

  /**
   * <pre>
   * max_depth (if &gt; 0) is the maximum number of InnerOps allowed (mainly for fixed-depth tries)
   * </pre>
   *
   * <code>int32 max_depth = 3;</code>
   */
  int getMaxDepth();

  /**
   * <pre>
   * min_depth (if &gt; 0) is the minimum number of InnerOps allowed (mainly for fixed-depth tries)
   * </pre>
   *
   * <code>int32 min_depth = 4;</code>
   */
  int getMinDepth();
}
