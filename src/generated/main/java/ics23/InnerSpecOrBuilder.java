// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: confio/proofs.proto

package ics23;

public interface InnerSpecOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ics23.InnerSpec)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Child order is the ordering of the children node, must count from 0
   * iavl tree is [0, 1] (left then right)
   * merk is [0, 2, 1] (left, right, here)
   * </pre>
   *
   * <code>repeated int32 child_order = 1;</code>
   */
  java.util.List<java.lang.Integer> getChildOrderList();
  /**
   * <pre>
   * Child order is the ordering of the children node, must count from 0
   * iavl tree is [0, 1] (left then right)
   * merk is [0, 2, 1] (left, right, here)
   * </pre>
   *
   * <code>repeated int32 child_order = 1;</code>
   */
  int getChildOrderCount();
  /**
   * <pre>
   * Child order is the ordering of the children node, must count from 0
   * iavl tree is [0, 1] (left then right)
   * merk is [0, 2, 1] (left, right, here)
   * </pre>
   *
   * <code>repeated int32 child_order = 1;</code>
   */
  int getChildOrder(int index);

  /**
   * <code>int32 child_size = 2;</code>
   */
  int getChildSize();

  /**
   * <code>int32 min_prefix_length = 3;</code>
   */
  int getMinPrefixLength();

  /**
   * <code>int32 max_prefix_length = 4;</code>
   */
  int getMaxPrefixLength();

  /**
   * <pre>
   * empty child is the prehash image that is used when one child is nil (eg. 20 bytes of 0)
   * </pre>
   *
   * <code>bytes empty_child = 5;</code>
   */
  com.google.protobuf.ByteString getEmptyChild();

  /**
   * <pre>
   * hash is the algorithm that must be used for each InnerOp
   * </pre>
   *
   * <code>.ics23.HashOp hash = 6;</code>
   */
  int getHashValue();
  /**
   * <pre>
   * hash is the algorithm that must be used for each InnerOp
   * </pre>
   *
   * <code>.ics23.HashOp hash = 6;</code>
   */
  ics23.HashOp getHash();
}
