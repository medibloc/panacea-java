// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/tx/signing/v1beta1/signing.proto

package cosmos.tx.signing.v1beta1;

/**
 * <pre>
 * SignatureDescriptor is a convenience type which represents the full data for
 * a signature including the public key of the signer, signing modes and the
 * signature itself. It is primarily used for coordinating signatures between
 * clients.
 * </pre>
 *
 * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor}
 */
public  final class SignatureDescriptor extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor)
    SignatureDescriptorOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SignatureDescriptor.newBuilder() to construct.
  private SignatureDescriptor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SignatureDescriptor() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SignatureDescriptor(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.Any.Builder subBuilder = null;
            if (publicKey_ != null) {
              subBuilder = publicKey_.toBuilder();
            }
            publicKey_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(publicKey_);
              publicKey_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder subBuilder = null;
            if (data_ != null) {
              subBuilder = data_.toBuilder();
            }
            data_ = input.readMessage(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(data_);
              data_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {

            sequence_ = input.readUInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            cosmos.tx.signing.v1beta1.SignatureDescriptor.class, cosmos.tx.signing.v1beta1.SignatureDescriptor.Builder.class);
  }

  public interface DataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
     */
    boolean hasSingle();
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
     */
    cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single getSingle();
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
     */
    cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SingleOrBuilder getSingleOrBuilder();

    /**
     * <pre>
     * multi represents a multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
     */
    boolean hasMulti();
    /**
     * <pre>
     * multi represents a multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
     */
    cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi getMulti();
    /**
     * <pre>
     * multi represents a multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
     */
    cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.MultiOrBuilder getMultiOrBuilder();

    public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SumCase getSumCase();
  }
  /**
   * <pre>
   * Data represents signature data
   * </pre>
   *
   * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor.Data}
   */
  public  static final class Data extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data)
      DataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Data.newBuilder() to construct.
    private Data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Data() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.Builder subBuilder = null;
              if (sumCase_ == 1) {
                subBuilder = ((cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) sum_).toBuilder();
              }
              sum_ =
                  input.readMessage(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) sum_);
                sum_ = subBuilder.buildPartial();
              }
              sumCase_ = 1;
              break;
            }
            case 18: {
              cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.Builder subBuilder = null;
              if (sumCase_ == 2) {
                subBuilder = ((cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) sum_).toBuilder();
              }
              sum_ =
                  input.readMessage(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) sum_);
                sum_ = subBuilder.buildPartial();
              }
              sumCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.class, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder.class);
    }

    public interface SingleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * mode is the signing mode of the single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
       */
      int getModeValue();
      /**
       * <pre>
       * mode is the signing mode of the single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
       */
      cosmos.tx.signing.v1beta1.SignMode getMode();

      /**
       * <pre>
       * signature is the raw signature bytes
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       */
      com.google.protobuf.ByteString getSignature();
    }
    /**
     * <pre>
     * Single is the signature data for a single signer
     * </pre>
     *
     * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single}
     */
    public  static final class Single extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single)
        SingleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Single.newBuilder() to construct.
      private Single(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Single() {
        mode_ = 0;
        signature_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Single(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                mode_ = rawValue;
                break;
              }
              case 18: {

                signature_ = input.readBytes();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.class, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.Builder.class);
      }

      public static final int MODE_FIELD_NUMBER = 1;
      private int mode_;
      /**
       * <pre>
       * mode is the signing mode of the single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
       */
      public int getModeValue() {
        return mode_;
      }
      /**
       * <pre>
       * mode is the signing mode of the single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
       */
      public cosmos.tx.signing.v1beta1.SignMode getMode() {
        @SuppressWarnings("deprecation")
        cosmos.tx.signing.v1beta1.SignMode result = cosmos.tx.signing.v1beta1.SignMode.valueOf(mode_);
        return result == null ? cosmos.tx.signing.v1beta1.SignMode.UNRECOGNIZED : result;
      }

      public static final int SIGNATURE_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString signature_;
      /**
       * <pre>
       * signature is the raw signature bytes
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (mode_ != cosmos.tx.signing.v1beta1.SignMode.SIGN_MODE_UNSPECIFIED.getNumber()) {
          output.writeEnum(1, mode_);
        }
        if (!signature_.isEmpty()) {
          output.writeBytes(2, signature_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (mode_ != cosmos.tx.signing.v1beta1.SignMode.SIGN_MODE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, mode_);
        }
        if (!signature_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, signature_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single)) {
          return super.equals(obj);
        }
        cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single other = (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) obj;

        if (mode_ != other.mode_) return false;
        if (!getSignature()
            .equals(other.getSignature())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + MODE_FIELD_NUMBER;
        hash = (53 * hash) + mode_;
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Single is the signature data for a single signer
       * </pre>
       *
       * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single)
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SingleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.class, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.Builder.class);
        }

        // Construct using cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          mode_ = 0;

          signature_ = com.google.protobuf.ByteString.EMPTY;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_descriptor;
        }

        @java.lang.Override
        public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single getDefaultInstanceForType() {
          return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.getDefaultInstance();
        }

        @java.lang.Override
        public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single build() {
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single buildPartial() {
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single result = new cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single(this);
          result.mode_ = mode_;
          result.signature_ = signature_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) {
            return mergeFrom((cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single other) {
          if (other == cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.getDefaultInstance()) return this;
          if (other.mode_ != 0) {
            setModeValue(other.getModeValue());
          }
          if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
            setSignature(other.getSignature());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int mode_ = 0;
        /**
         * <pre>
         * mode is the signing mode of the single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
         */
        public int getModeValue() {
          return mode_;
        }
        /**
         * <pre>
         * mode is the signing mode of the single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
         */
        public Builder setModeValue(int value) {
          mode_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * mode is the signing mode of the single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
         */
        public cosmos.tx.signing.v1beta1.SignMode getMode() {
          @SuppressWarnings("deprecation")
          cosmos.tx.signing.v1beta1.SignMode result = cosmos.tx.signing.v1beta1.SignMode.valueOf(mode_);
          return result == null ? cosmos.tx.signing.v1beta1.SignMode.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * mode is the signing mode of the single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
         */
        public Builder setMode(cosmos.tx.signing.v1beta1.SignMode value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          mode_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * mode is the signing mode of the single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
         */
        public Builder clearMode() {
          
          mode_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * signature is the raw signature bytes
         * </pre>
         *
         * <code>bytes signature = 2;</code>
         */
        public com.google.protobuf.ByteString getSignature() {
          return signature_;
        }
        /**
         * <pre>
         * signature is the raw signature bytes
         * </pre>
         *
         * <code>bytes signature = 2;</code>
         */
        public Builder setSignature(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          signature_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * signature is the raw signature bytes
         * </pre>
         *
         * <code>bytes signature = 2;</code>
         */
        public Builder clearSignature() {
          
          signature_ = getDefaultInstance().getSignature();
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single)
      }

      // @@protoc_insertion_point(class_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single)
      private static final cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single();
      }

      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Single>
          PARSER = new com.google.protobuf.AbstractParser<Single>() {
        @java.lang.Override
        public Single parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Single(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Single> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Single> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface MultiOrBuilder extends
        // @@protoc_insertion_point(interface_extends:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      boolean hasBitarray();
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      cosmos.crypto.multisig.v1beta1.CompactBitArray getBitarray();
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      cosmos.crypto.multisig.v1beta1.CompactBitArrayOrBuilder getBitarrayOrBuilder();

      /**
       * <pre>
       * signatures is the signatures of the multi-signature
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
       */
      java.util.List<cosmos.tx.signing.v1beta1.SignatureDescriptor.Data> 
          getSignaturesList();
      /**
       * <pre>
       * signatures is the signatures of the multi-signature
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
       */
      cosmos.tx.signing.v1beta1.SignatureDescriptor.Data getSignatures(int index);
      /**
       * <pre>
       * signatures is the signatures of the multi-signature
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
       */
      int getSignaturesCount();
      /**
       * <pre>
       * signatures is the signatures of the multi-signature
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
       */
      java.util.List<? extends cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder> 
          getSignaturesOrBuilderList();
      /**
       * <pre>
       * signatures is the signatures of the multi-signature
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
       */
      cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder getSignaturesOrBuilder(
          int index);
    }
    /**
     * <pre>
     * Multi is the signature data for a multisig public key
     * </pre>
     *
     * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi}
     */
    public  static final class Multi extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi)
        MultiOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Multi.newBuilder() to construct.
      private Multi(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Multi() {
        signatures_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Multi(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                cosmos.crypto.multisig.v1beta1.CompactBitArray.Builder subBuilder = null;
                if (bitarray_ != null) {
                  subBuilder = bitarray_.toBuilder();
                }
                bitarray_ = input.readMessage(cosmos.crypto.multisig.v1beta1.CompactBitArray.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(bitarray_);
                  bitarray_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  signatures_ = new java.util.ArrayList<cosmos.tx.signing.v1beta1.SignatureDescriptor.Data>();
                  mutable_bitField0_ |= 0x00000002;
                }
                signatures_.add(
                    input.readMessage(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            signatures_ = java.util.Collections.unmodifiableList(signatures_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.class, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.Builder.class);
      }

      private int bitField0_;
      public static final int BITARRAY_FIELD_NUMBER = 1;
      private cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray_;
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      public boolean hasBitarray() {
        return bitarray_ != null;
      }
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      public cosmos.crypto.multisig.v1beta1.CompactBitArray getBitarray() {
        return bitarray_ == null ? cosmos.crypto.multisig.v1beta1.CompactBitArray.getDefaultInstance() : bitarray_;
      }
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      public cosmos.crypto.multisig.v1beta1.CompactBitArrayOrBuilder getBitarrayOrBuilder() {
        return getBitarray();
      }

      public static final int SIGNATURES_FIELD_NUMBER = 2;
      private java.util.List<cosmos.tx.signing.v1beta1.SignatureDescriptor.Data> signatures_;
      /**
       * <pre>
       * signatures is the signatures of the multi-signature
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
       */
      public java.util.List<cosmos.tx.signing.v1beta1.SignatureDescriptor.Data> getSignaturesList() {
        return signatures_;
      }
      /**
       * <pre>
       * signatures is the signatures of the multi-signature
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
       */
      public java.util.List<? extends cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder> 
          getSignaturesOrBuilderList() {
        return signatures_;
      }
      /**
       * <pre>
       * signatures is the signatures of the multi-signature
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
       */
      public int getSignaturesCount() {
        return signatures_.size();
      }
      /**
       * <pre>
       * signatures is the signatures of the multi-signature
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
       */
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data getSignatures(int index) {
        return signatures_.get(index);
      }
      /**
       * <pre>
       * signatures is the signatures of the multi-signature
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
       */
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder getSignaturesOrBuilder(
          int index) {
        return signatures_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (bitarray_ != null) {
          output.writeMessage(1, getBitarray());
        }
        for (int i = 0; i < signatures_.size(); i++) {
          output.writeMessage(2, signatures_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (bitarray_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getBitarray());
        }
        for (int i = 0; i < signatures_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, signatures_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi)) {
          return super.equals(obj);
        }
        cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi other = (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) obj;

        if (hasBitarray() != other.hasBitarray()) return false;
        if (hasBitarray()) {
          if (!getBitarray()
              .equals(other.getBitarray())) return false;
        }
        if (!getSignaturesList()
            .equals(other.getSignaturesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasBitarray()) {
          hash = (37 * hash) + BITARRAY_FIELD_NUMBER;
          hash = (53 * hash) + getBitarray().hashCode();
        }
        if (getSignaturesCount() > 0) {
          hash = (37 * hash) + SIGNATURES_FIELD_NUMBER;
          hash = (53 * hash) + getSignaturesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Multi is the signature data for a multisig public key
       * </pre>
       *
       * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi)
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.MultiOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.class, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.Builder.class);
        }

        // Construct using cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSignaturesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (bitarrayBuilder_ == null) {
            bitarray_ = null;
          } else {
            bitarray_ = null;
            bitarrayBuilder_ = null;
          }
          if (signaturesBuilder_ == null) {
            signatures_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            signaturesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_descriptor;
        }

        @java.lang.Override
        public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi getDefaultInstanceForType() {
          return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.getDefaultInstance();
        }

        @java.lang.Override
        public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi build() {
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi buildPartial() {
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi result = new cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (bitarrayBuilder_ == null) {
            result.bitarray_ = bitarray_;
          } else {
            result.bitarray_ = bitarrayBuilder_.build();
          }
          if (signaturesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              signatures_ = java.util.Collections.unmodifiableList(signatures_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.signatures_ = signatures_;
          } else {
            result.signatures_ = signaturesBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) {
            return mergeFrom((cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi other) {
          if (other == cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.getDefaultInstance()) return this;
          if (other.hasBitarray()) {
            mergeBitarray(other.getBitarray());
          }
          if (signaturesBuilder_ == null) {
            if (!other.signatures_.isEmpty()) {
              if (signatures_.isEmpty()) {
                signatures_ = other.signatures_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureSignaturesIsMutable();
                signatures_.addAll(other.signatures_);
              }
              onChanged();
            }
          } else {
            if (!other.signatures_.isEmpty()) {
              if (signaturesBuilder_.isEmpty()) {
                signaturesBuilder_.dispose();
                signaturesBuilder_ = null;
                signatures_ = other.signatures_;
                bitField0_ = (bitField0_ & ~0x00000002);
                signaturesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSignaturesFieldBuilder() : null;
              } else {
                signaturesBuilder_.addAllMessages(other.signatures_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray_;
        private com.google.protobuf.SingleFieldBuilderV3<
            cosmos.crypto.multisig.v1beta1.CompactBitArray, cosmos.crypto.multisig.v1beta1.CompactBitArray.Builder, cosmos.crypto.multisig.v1beta1.CompactBitArrayOrBuilder> bitarrayBuilder_;
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        public boolean hasBitarray() {
          return bitarrayBuilder_ != null || bitarray_ != null;
        }
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        public cosmos.crypto.multisig.v1beta1.CompactBitArray getBitarray() {
          if (bitarrayBuilder_ == null) {
            return bitarray_ == null ? cosmos.crypto.multisig.v1beta1.CompactBitArray.getDefaultInstance() : bitarray_;
          } else {
            return bitarrayBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        public Builder setBitarray(cosmos.crypto.multisig.v1beta1.CompactBitArray value) {
          if (bitarrayBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitarray_ = value;
            onChanged();
          } else {
            bitarrayBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        public Builder setBitarray(
            cosmos.crypto.multisig.v1beta1.CompactBitArray.Builder builderForValue) {
          if (bitarrayBuilder_ == null) {
            bitarray_ = builderForValue.build();
            onChanged();
          } else {
            bitarrayBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        public Builder mergeBitarray(cosmos.crypto.multisig.v1beta1.CompactBitArray value) {
          if (bitarrayBuilder_ == null) {
            if (bitarray_ != null) {
              bitarray_ =
                cosmos.crypto.multisig.v1beta1.CompactBitArray.newBuilder(bitarray_).mergeFrom(value).buildPartial();
            } else {
              bitarray_ = value;
            }
            onChanged();
          } else {
            bitarrayBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        public Builder clearBitarray() {
          if (bitarrayBuilder_ == null) {
            bitarray_ = null;
            onChanged();
          } else {
            bitarray_ = null;
            bitarrayBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        public cosmos.crypto.multisig.v1beta1.CompactBitArray.Builder getBitarrayBuilder() {
          
          onChanged();
          return getBitarrayFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        public cosmos.crypto.multisig.v1beta1.CompactBitArrayOrBuilder getBitarrayOrBuilder() {
          if (bitarrayBuilder_ != null) {
            return bitarrayBuilder_.getMessageOrBuilder();
          } else {
            return bitarray_ == null ?
                cosmos.crypto.multisig.v1beta1.CompactBitArray.getDefaultInstance() : bitarray_;
          }
        }
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            cosmos.crypto.multisig.v1beta1.CompactBitArray, cosmos.crypto.multisig.v1beta1.CompactBitArray.Builder, cosmos.crypto.multisig.v1beta1.CompactBitArrayOrBuilder> 
            getBitarrayFieldBuilder() {
          if (bitarrayBuilder_ == null) {
            bitarrayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                cosmos.crypto.multisig.v1beta1.CompactBitArray, cosmos.crypto.multisig.v1beta1.CompactBitArray.Builder, cosmos.crypto.multisig.v1beta1.CompactBitArrayOrBuilder>(
                    getBitarray(),
                    getParentForChildren(),
                    isClean());
            bitarray_ = null;
          }
          return bitarrayBuilder_;
        }

        private java.util.List<cosmos.tx.signing.v1beta1.SignatureDescriptor.Data> signatures_ =
          java.util.Collections.emptyList();
        private void ensureSignaturesIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            signatures_ = new java.util.ArrayList<cosmos.tx.signing.v1beta1.SignatureDescriptor.Data>(signatures_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder, cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder> signaturesBuilder_;

        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public java.util.List<cosmos.tx.signing.v1beta1.SignatureDescriptor.Data> getSignaturesList() {
          if (signaturesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(signatures_);
          } else {
            return signaturesBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public int getSignaturesCount() {
          if (signaturesBuilder_ == null) {
            return signatures_.size();
          } else {
            return signaturesBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data getSignatures(int index) {
          if (signaturesBuilder_ == null) {
            return signatures_.get(index);
          } else {
            return signaturesBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public Builder setSignatures(
            int index, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data value) {
          if (signaturesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSignaturesIsMutable();
            signatures_.set(index, value);
            onChanged();
          } else {
            signaturesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public Builder setSignatures(
            int index, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder builderForValue) {
          if (signaturesBuilder_ == null) {
            ensureSignaturesIsMutable();
            signatures_.set(index, builderForValue.build());
            onChanged();
          } else {
            signaturesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public Builder addSignatures(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data value) {
          if (signaturesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSignaturesIsMutable();
            signatures_.add(value);
            onChanged();
          } else {
            signaturesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public Builder addSignatures(
            int index, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data value) {
          if (signaturesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSignaturesIsMutable();
            signatures_.add(index, value);
            onChanged();
          } else {
            signaturesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public Builder addSignatures(
            cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder builderForValue) {
          if (signaturesBuilder_ == null) {
            ensureSignaturesIsMutable();
            signatures_.add(builderForValue.build());
            onChanged();
          } else {
            signaturesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public Builder addSignatures(
            int index, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder builderForValue) {
          if (signaturesBuilder_ == null) {
            ensureSignaturesIsMutable();
            signatures_.add(index, builderForValue.build());
            onChanged();
          } else {
            signaturesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public Builder addAllSignatures(
            java.lang.Iterable<? extends cosmos.tx.signing.v1beta1.SignatureDescriptor.Data> values) {
          if (signaturesBuilder_ == null) {
            ensureSignaturesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, signatures_);
            onChanged();
          } else {
            signaturesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public Builder clearSignatures() {
          if (signaturesBuilder_ == null) {
            signatures_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            signaturesBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public Builder removeSignatures(int index) {
          if (signaturesBuilder_ == null) {
            ensureSignaturesIsMutable();
            signatures_.remove(index);
            onChanged();
          } else {
            signaturesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder getSignaturesBuilder(
            int index) {
          return getSignaturesFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder getSignaturesOrBuilder(
            int index) {
          if (signaturesBuilder_ == null) {
            return signatures_.get(index);  } else {
            return signaturesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public java.util.List<? extends cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder> 
             getSignaturesOrBuilderList() {
          if (signaturesBuilder_ != null) {
            return signaturesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(signatures_);
          }
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder addSignaturesBuilder() {
          return getSignaturesFieldBuilder().addBuilder(
              cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.getDefaultInstance());
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder addSignaturesBuilder(
            int index) {
          return getSignaturesFieldBuilder().addBuilder(
              index, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.getDefaultInstance());
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public java.util.List<cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder> 
             getSignaturesBuilderList() {
          return getSignaturesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder, cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder> 
            getSignaturesFieldBuilder() {
          if (signaturesBuilder_ == null) {
            signaturesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder, cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder>(
                    signatures_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            signatures_ = null;
          }
          return signaturesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi)
      }

      // @@protoc_insertion_point(class_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi)
      private static final cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi();
      }

      public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Multi>
          PARSER = new com.google.protobuf.AbstractParser<Multi>() {
        @java.lang.Override
        public Multi parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Multi(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Multi> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Multi> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int sumCase_ = 0;
    private java.lang.Object sum_;
    public enum SumCase
        implements com.google.protobuf.Internal.EnumLite {
      SINGLE(1),
      MULTI(2),
      SUM_NOT_SET(0);
      private final int value;
      private SumCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SumCase valueOf(int value) {
        return forNumber(value);
      }

      public static SumCase forNumber(int value) {
        switch (value) {
          case 1: return SINGLE;
          case 2: return MULTI;
          case 0: return SUM_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SumCase
    getSumCase() {
      return SumCase.forNumber(
          sumCase_);
    }

    public static final int SINGLE_FIELD_NUMBER = 1;
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
     */
    public boolean hasSingle() {
      return sumCase_ == 1;
    }
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
     */
    public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single getSingle() {
      if (sumCase_ == 1) {
         return (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) sum_;
      }
      return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.getDefaultInstance();
    }
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
     */
    public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SingleOrBuilder getSingleOrBuilder() {
      if (sumCase_ == 1) {
         return (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) sum_;
      }
      return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.getDefaultInstance();
    }

    public static final int MULTI_FIELD_NUMBER = 2;
    /**
     * <pre>
     * multi represents a multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
     */
    public boolean hasMulti() {
      return sumCase_ == 2;
    }
    /**
     * <pre>
     * multi represents a multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
     */
    public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi getMulti() {
      if (sumCase_ == 2) {
         return (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) sum_;
      }
      return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.getDefaultInstance();
    }
    /**
     * <pre>
     * multi represents a multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
     */
    public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.MultiOrBuilder getMultiOrBuilder() {
      if (sumCase_ == 2) {
         return (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) sum_;
      }
      return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sumCase_ == 1) {
        output.writeMessage(1, (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) sum_);
      }
      if (sumCase_ == 2) {
        output.writeMessage(2, (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) sum_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sumCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) sum_);
      }
      if (sumCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) sum_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.tx.signing.v1beta1.SignatureDescriptor.Data)) {
        return super.equals(obj);
      }
      cosmos.tx.signing.v1beta1.SignatureDescriptor.Data other = (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data) obj;

      if (!getSumCase().equals(other.getSumCase())) return false;
      switch (sumCase_) {
        case 1:
          if (!getSingle()
              .equals(other.getSingle())) return false;
          break;
        case 2:
          if (!getMulti()
              .equals(other.getMulti())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (sumCase_) {
        case 1:
          hash = (37 * hash) + SINGLE_FIELD_NUMBER;
          hash = (53 * hash) + getSingle().hashCode();
          break;
        case 2:
          hash = (37 * hash) + MULTI_FIELD_NUMBER;
          hash = (53 * hash) + getMulti().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Data represents signature data
     * </pre>
     *
     * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor.Data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data)
        cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.class, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder.class);
      }

      // Construct using cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sumCase_ = 0;
        sum_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_descriptor;
      }

      @java.lang.Override
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data getDefaultInstanceForType() {
        return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data build() {
        cosmos.tx.signing.v1beta1.SignatureDescriptor.Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data buildPartial() {
        cosmos.tx.signing.v1beta1.SignatureDescriptor.Data result = new cosmos.tx.signing.v1beta1.SignatureDescriptor.Data(this);
        if (sumCase_ == 1) {
          if (singleBuilder_ == null) {
            result.sum_ = sum_;
          } else {
            result.sum_ = singleBuilder_.build();
          }
        }
        if (sumCase_ == 2) {
          if (multiBuilder_ == null) {
            result.sum_ = sum_;
          } else {
            result.sum_ = multiBuilder_.build();
          }
        }
        result.sumCase_ = sumCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.tx.signing.v1beta1.SignatureDescriptor.Data) {
          return mergeFrom((cosmos.tx.signing.v1beta1.SignatureDescriptor.Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data other) {
        if (other == cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.getDefaultInstance()) return this;
        switch (other.getSumCase()) {
          case SINGLE: {
            mergeSingle(other.getSingle());
            break;
          }
          case MULTI: {
            mergeMulti(other.getMulti());
            break;
          }
          case SUM_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cosmos.tx.signing.v1beta1.SignatureDescriptor.Data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int sumCase_ = 0;
      private java.lang.Object sum_;
      public SumCase
          getSumCase() {
        return SumCase.forNumber(
            sumCase_);
      }

      public Builder clearSum() {
        sumCase_ = 0;
        sum_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.Builder, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SingleOrBuilder> singleBuilder_;
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      public boolean hasSingle() {
        return sumCase_ == 1;
      }
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single getSingle() {
        if (singleBuilder_ == null) {
          if (sumCase_ == 1) {
            return (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) sum_;
          }
          return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.getDefaultInstance();
        } else {
          if (sumCase_ == 1) {
            return singleBuilder_.getMessage();
          }
          return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      public Builder setSingle(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single value) {
        if (singleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sum_ = value;
          onChanged();
        } else {
          singleBuilder_.setMessage(value);
        }
        sumCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      public Builder setSingle(
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.Builder builderForValue) {
        if (singleBuilder_ == null) {
          sum_ = builderForValue.build();
          onChanged();
        } else {
          singleBuilder_.setMessage(builderForValue.build());
        }
        sumCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      public Builder mergeSingle(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single value) {
        if (singleBuilder_ == null) {
          if (sumCase_ == 1 &&
              sum_ != cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.getDefaultInstance()) {
            sum_ = cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.newBuilder((cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) sum_)
                .mergeFrom(value).buildPartial();
          } else {
            sum_ = value;
          }
          onChanged();
        } else {
          if (sumCase_ == 1) {
            singleBuilder_.mergeFrom(value);
          }
          singleBuilder_.setMessage(value);
        }
        sumCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      public Builder clearSingle() {
        if (singleBuilder_ == null) {
          if (sumCase_ == 1) {
            sumCase_ = 0;
            sum_ = null;
            onChanged();
          }
        } else {
          if (sumCase_ == 1) {
            sumCase_ = 0;
            sum_ = null;
          }
          singleBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.Builder getSingleBuilder() {
        return getSingleFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SingleOrBuilder getSingleOrBuilder() {
        if ((sumCase_ == 1) && (singleBuilder_ != null)) {
          return singleBuilder_.getMessageOrBuilder();
        } else {
          if (sumCase_ == 1) {
            return (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) sum_;
          }
          return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.Builder, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SingleOrBuilder> 
          getSingleFieldBuilder() {
        if (singleBuilder_ == null) {
          if (!(sumCase_ == 1)) {
            sum_ = cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.getDefaultInstance();
          }
          singleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.Builder, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SingleOrBuilder>(
                  (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single) sum_,
                  getParentForChildren(),
                  isClean());
          sum_ = null;
        }
        sumCase_ = 1;
        onChanged();;
        return singleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.Builder, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.MultiOrBuilder> multiBuilder_;
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      public boolean hasMulti() {
        return sumCase_ == 2;
      }
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi getMulti() {
        if (multiBuilder_ == null) {
          if (sumCase_ == 2) {
            return (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) sum_;
          }
          return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.getDefaultInstance();
        } else {
          if (sumCase_ == 2) {
            return multiBuilder_.getMessage();
          }
          return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      public Builder setMulti(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi value) {
        if (multiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sum_ = value;
          onChanged();
        } else {
          multiBuilder_.setMessage(value);
        }
        sumCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      public Builder setMulti(
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.Builder builderForValue) {
        if (multiBuilder_ == null) {
          sum_ = builderForValue.build();
          onChanged();
        } else {
          multiBuilder_.setMessage(builderForValue.build());
        }
        sumCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      public Builder mergeMulti(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi value) {
        if (multiBuilder_ == null) {
          if (sumCase_ == 2 &&
              sum_ != cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.getDefaultInstance()) {
            sum_ = cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.newBuilder((cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) sum_)
                .mergeFrom(value).buildPartial();
          } else {
            sum_ = value;
          }
          onChanged();
        } else {
          if (sumCase_ == 2) {
            multiBuilder_.mergeFrom(value);
          }
          multiBuilder_.setMessage(value);
        }
        sumCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      public Builder clearMulti() {
        if (multiBuilder_ == null) {
          if (sumCase_ == 2) {
            sumCase_ = 0;
            sum_ = null;
            onChanged();
          }
        } else {
          if (sumCase_ == 2) {
            sumCase_ = 0;
            sum_ = null;
          }
          multiBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.Builder getMultiBuilder() {
        return getMultiFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.MultiOrBuilder getMultiOrBuilder() {
        if ((sumCase_ == 2) && (multiBuilder_ != null)) {
          return multiBuilder_.getMessageOrBuilder();
        } else {
          if (sumCase_ == 2) {
            return (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) sum_;
          }
          return cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.Builder, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.MultiOrBuilder> 
          getMultiFieldBuilder() {
        if (multiBuilder_ == null) {
          if (!(sumCase_ == 2)) {
            sum_ = cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.getDefaultInstance();
          }
          multiBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.Builder, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.MultiOrBuilder>(
                  (cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi) sum_,
                  getParentForChildren(),
                  isClean());
          sum_ = null;
        }
        sumCase_ = 2;
        onChanged();;
        return multiBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data)
    }

    // @@protoc_insertion_point(class_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data)
    private static final cosmos.tx.signing.v1beta1.SignatureDescriptor.Data DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.tx.signing.v1beta1.SignatureDescriptor.Data();
    }

    public static cosmos.tx.signing.v1beta1.SignatureDescriptor.Data getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Data>
        PARSER = new com.google.protobuf.AbstractParser<Data>() {
      @java.lang.Override
      public Data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Data(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Data> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Data> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int PUBLIC_KEY_FIELD_NUMBER = 1;
  private com.google.protobuf.Any publicKey_;
  /**
   * <pre>
   * public_key is the public key of the signer
   * </pre>
   *
   * <code>.google.protobuf.Any public_key = 1;</code>
   */
  public boolean hasPublicKey() {
    return publicKey_ != null;
  }
  /**
   * <pre>
   * public_key is the public key of the signer
   * </pre>
   *
   * <code>.google.protobuf.Any public_key = 1;</code>
   */
  public com.google.protobuf.Any getPublicKey() {
    return publicKey_ == null ? com.google.protobuf.Any.getDefaultInstance() : publicKey_;
  }
  /**
   * <pre>
   * public_key is the public key of the signer
   * </pre>
   *
   * <code>.google.protobuf.Any public_key = 1;</code>
   */
  public com.google.protobuf.AnyOrBuilder getPublicKeyOrBuilder() {
    return getPublicKey();
  }

  public static final int DATA_FIELD_NUMBER = 2;
  private cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data_;
  /**
   * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
   */
  public boolean hasData() {
    return data_ != null;
  }
  /**
   * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
   */
  public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data getData() {
    return data_ == null ? cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.getDefaultInstance() : data_;
  }
  /**
   * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
   */
  public cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder getDataOrBuilder() {
    return getData();
  }

  public static final int SEQUENCE_FIELD_NUMBER = 3;
  private long sequence_;
  /**
   * <pre>
   * sequence is the sequence of the account, which describes the
   * number of committed transactions signed by a given address. It is used to prevent
   * replay attacks.
   * </pre>
   *
   * <code>uint64 sequence = 3;</code>
   */
  public long getSequence() {
    return sequence_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (publicKey_ != null) {
      output.writeMessage(1, getPublicKey());
    }
    if (data_ != null) {
      output.writeMessage(2, getData());
    }
    if (sequence_ != 0L) {
      output.writeUInt64(3, sequence_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (publicKey_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getPublicKey());
    }
    if (data_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getData());
    }
    if (sequence_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, sequence_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof cosmos.tx.signing.v1beta1.SignatureDescriptor)) {
      return super.equals(obj);
    }
    cosmos.tx.signing.v1beta1.SignatureDescriptor other = (cosmos.tx.signing.v1beta1.SignatureDescriptor) obj;

    if (hasPublicKey() != other.hasPublicKey()) return false;
    if (hasPublicKey()) {
      if (!getPublicKey()
          .equals(other.getPublicKey())) return false;
    }
    if (hasData() != other.hasData()) return false;
    if (hasData()) {
      if (!getData()
          .equals(other.getData())) return false;
    }
    if (getSequence()
        != other.getSequence()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasPublicKey()) {
      hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPublicKey().hashCode();
    }
    if (hasData()) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
    }
    hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSequence());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static cosmos.tx.signing.v1beta1.SignatureDescriptor parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cosmos.tx.signing.v1beta1.SignatureDescriptor parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cosmos.tx.signing.v1beta1.SignatureDescriptor parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cosmos.tx.signing.v1beta1.SignatureDescriptor parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cosmos.tx.signing.v1beta1.SignatureDescriptor parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cosmos.tx.signing.v1beta1.SignatureDescriptor parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cosmos.tx.signing.v1beta1.SignatureDescriptor parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static cosmos.tx.signing.v1beta1.SignatureDescriptor parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static cosmos.tx.signing.v1beta1.SignatureDescriptor parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static cosmos.tx.signing.v1beta1.SignatureDescriptor parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static cosmos.tx.signing.v1beta1.SignatureDescriptor parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static cosmos.tx.signing.v1beta1.SignatureDescriptor parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(cosmos.tx.signing.v1beta1.SignatureDescriptor prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * SignatureDescriptor is a convenience type which represents the full data for
   * a signature including the public key of the signer, signing modes and the
   * signature itself. It is primarily used for coordinating signatures between
   * clients.
   * </pre>
   *
   * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor)
      cosmos.tx.signing.v1beta1.SignatureDescriptorOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.tx.signing.v1beta1.SignatureDescriptor.class, cosmos.tx.signing.v1beta1.SignatureDescriptor.Builder.class);
    }

    // Construct using cosmos.tx.signing.v1beta1.SignatureDescriptor.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (publicKeyBuilder_ == null) {
        publicKey_ = null;
      } else {
        publicKey_ = null;
        publicKeyBuilder_ = null;
      }
      if (dataBuilder_ == null) {
        data_ = null;
      } else {
        data_ = null;
        dataBuilder_ = null;
      }
      sequence_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_descriptor;
    }

    @java.lang.Override
    public cosmos.tx.signing.v1beta1.SignatureDescriptor getDefaultInstanceForType() {
      return cosmos.tx.signing.v1beta1.SignatureDescriptor.getDefaultInstance();
    }

    @java.lang.Override
    public cosmos.tx.signing.v1beta1.SignatureDescriptor build() {
      cosmos.tx.signing.v1beta1.SignatureDescriptor result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public cosmos.tx.signing.v1beta1.SignatureDescriptor buildPartial() {
      cosmos.tx.signing.v1beta1.SignatureDescriptor result = new cosmos.tx.signing.v1beta1.SignatureDescriptor(this);
      if (publicKeyBuilder_ == null) {
        result.publicKey_ = publicKey_;
      } else {
        result.publicKey_ = publicKeyBuilder_.build();
      }
      if (dataBuilder_ == null) {
        result.data_ = data_;
      } else {
        result.data_ = dataBuilder_.build();
      }
      result.sequence_ = sequence_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof cosmos.tx.signing.v1beta1.SignatureDescriptor) {
        return mergeFrom((cosmos.tx.signing.v1beta1.SignatureDescriptor)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(cosmos.tx.signing.v1beta1.SignatureDescriptor other) {
      if (other == cosmos.tx.signing.v1beta1.SignatureDescriptor.getDefaultInstance()) return this;
      if (other.hasPublicKey()) {
        mergePublicKey(other.getPublicKey());
      }
      if (other.hasData()) {
        mergeData(other.getData());
      }
      if (other.getSequence() != 0L) {
        setSequence(other.getSequence());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      cosmos.tx.signing.v1beta1.SignatureDescriptor parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (cosmos.tx.signing.v1beta1.SignatureDescriptor) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.protobuf.Any publicKey_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> publicKeyBuilder_;
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    public boolean hasPublicKey() {
      return publicKeyBuilder_ != null || publicKey_ != null;
    }
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    public com.google.protobuf.Any getPublicKey() {
      if (publicKeyBuilder_ == null) {
        return publicKey_ == null ? com.google.protobuf.Any.getDefaultInstance() : publicKey_;
      } else {
        return publicKeyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    public Builder setPublicKey(com.google.protobuf.Any value) {
      if (publicKeyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        publicKey_ = value;
        onChanged();
      } else {
        publicKeyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    public Builder setPublicKey(
        com.google.protobuf.Any.Builder builderForValue) {
      if (publicKeyBuilder_ == null) {
        publicKey_ = builderForValue.build();
        onChanged();
      } else {
        publicKeyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    public Builder mergePublicKey(com.google.protobuf.Any value) {
      if (publicKeyBuilder_ == null) {
        if (publicKey_ != null) {
          publicKey_ =
            com.google.protobuf.Any.newBuilder(publicKey_).mergeFrom(value).buildPartial();
        } else {
          publicKey_ = value;
        }
        onChanged();
      } else {
        publicKeyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    public Builder clearPublicKey() {
      if (publicKeyBuilder_ == null) {
        publicKey_ = null;
        onChanged();
      } else {
        publicKey_ = null;
        publicKeyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    public com.google.protobuf.Any.Builder getPublicKeyBuilder() {
      
      onChanged();
      return getPublicKeyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    public com.google.protobuf.AnyOrBuilder getPublicKeyOrBuilder() {
      if (publicKeyBuilder_ != null) {
        return publicKeyBuilder_.getMessageOrBuilder();
      } else {
        return publicKey_ == null ?
            com.google.protobuf.Any.getDefaultInstance() : publicKey_;
      }
    }
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
        getPublicKeyFieldBuilder() {
      if (publicKeyBuilder_ == null) {
        publicKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                getPublicKey(),
                getParentForChildren(),
                isClean());
        publicKey_ = null;
      }
      return publicKeyBuilder_;
    }

    private cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data_;
    private com.google.protobuf.SingleFieldBuilderV3<
        cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder, cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder> dataBuilder_;
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    public boolean hasData() {
      return dataBuilder_ != null || data_ != null;
    }
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data getData() {
      if (dataBuilder_ == null) {
        return data_ == null ? cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.getDefaultInstance() : data_;
      } else {
        return dataBuilder_.getMessage();
      }
    }
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    public Builder setData(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        dataBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    public Builder setData(
        cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder builderForValue) {
      if (dataBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        dataBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    public Builder mergeData(cosmos.tx.signing.v1beta1.SignatureDescriptor.Data value) {
      if (dataBuilder_ == null) {
        if (data_ != null) {
          data_ =
            cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.newBuilder(data_).mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        dataBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    public Builder clearData() {
      if (dataBuilder_ == null) {
        data_ = null;
        onChanged();
      } else {
        data_ = null;
        dataBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    public cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder getDataBuilder() {
      
      onChanged();
      return getDataFieldBuilder().getBuilder();
    }
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    public cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder getDataOrBuilder() {
      if (dataBuilder_ != null) {
        return dataBuilder_.getMessageOrBuilder();
      } else {
        return data_ == null ?
            cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.getDefaultInstance() : data_;
      }
    }
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder, cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder> 
        getDataFieldBuilder() {
      if (dataBuilder_ == null) {
        dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Builder, cosmos.tx.signing.v1beta1.SignatureDescriptor.DataOrBuilder>(
                getData(),
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      return dataBuilder_;
    }

    private long sequence_ ;
    /**
     * <pre>
     * sequence is the sequence of the account, which describes the
     * number of committed transactions signed by a given address. It is used to prevent
     * replay attacks.
     * </pre>
     *
     * <code>uint64 sequence = 3;</code>
     */
    public long getSequence() {
      return sequence_;
    }
    /**
     * <pre>
     * sequence is the sequence of the account, which describes the
     * number of committed transactions signed by a given address. It is used to prevent
     * replay attacks.
     * </pre>
     *
     * <code>uint64 sequence = 3;</code>
     */
    public Builder setSequence(long value) {
      
      sequence_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * sequence is the sequence of the account, which describes the
     * number of committed transactions signed by a given address. It is used to prevent
     * replay attacks.
     * </pre>
     *
     * <code>uint64 sequence = 3;</code>
     */
    public Builder clearSequence() {
      
      sequence_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor)
  }

  // @@protoc_insertion_point(class_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor)
  private static final cosmos.tx.signing.v1beta1.SignatureDescriptor DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new cosmos.tx.signing.v1beta1.SignatureDescriptor();
  }

  public static cosmos.tx.signing.v1beta1.SignatureDescriptor getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SignatureDescriptor>
      PARSER = new com.google.protobuf.AbstractParser<SignatureDescriptor>() {
    @java.lang.Override
    public SignatureDescriptor parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SignatureDescriptor(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SignatureDescriptor> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SignatureDescriptor> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public cosmos.tx.signing.v1beta1.SignatureDescriptor getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

