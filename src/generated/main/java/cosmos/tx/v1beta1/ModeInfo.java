// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/tx/v1beta1/tx.proto

package cosmos.tx.v1beta1;

/**
 * <pre>
 * ModeInfo describes the signing mode of a single or nested multisig signer.
 * </pre>
 *
 * Protobuf type {@code cosmos.tx.v1beta1.ModeInfo}
 */
public  final class ModeInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:cosmos.tx.v1beta1.ModeInfo)
    ModeInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ModeInfo.newBuilder() to construct.
  private ModeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ModeInfo() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ModeInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            cosmos.tx.v1beta1.ModeInfo.Single.Builder subBuilder = null;
            if (sumCase_ == 1) {
              subBuilder = ((cosmos.tx.v1beta1.ModeInfo.Single) sum_).toBuilder();
            }
            sum_ =
                input.readMessage(cosmos.tx.v1beta1.ModeInfo.Single.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((cosmos.tx.v1beta1.ModeInfo.Single) sum_);
              sum_ = subBuilder.buildPartial();
            }
            sumCase_ = 1;
            break;
          }
          case 18: {
            cosmos.tx.v1beta1.ModeInfo.Multi.Builder subBuilder = null;
            if (sumCase_ == 2) {
              subBuilder = ((cosmos.tx.v1beta1.ModeInfo.Multi) sum_).toBuilder();
            }
            sum_ =
                input.readMessage(cosmos.tx.v1beta1.ModeInfo.Multi.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((cosmos.tx.v1beta1.ModeInfo.Multi) sum_);
              sum_ = subBuilder.buildPartial();
            }
            sumCase_ = 2;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            cosmos.tx.v1beta1.ModeInfo.class, cosmos.tx.v1beta1.ModeInfo.Builder.class);
  }

  public interface SingleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.tx.v1beta1.ModeInfo.Single)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * mode is the signing mode of the single signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
     */
    int getModeValue();
    /**
     * <pre>
     * mode is the signing mode of the single signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
     */
    cosmos.tx.signing.v1beta1.SignMode getMode();
  }
  /**
   * <pre>
   * Single is the mode info for a single signer. It is structured as a message
   * to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
   * future
   * </pre>
   *
   * Protobuf type {@code cosmos.tx.v1beta1.ModeInfo.Single}
   */
  public  static final class Single extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.tx.v1beta1.ModeInfo.Single)
      SingleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Single.newBuilder() to construct.
    private Single(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Single() {
      mode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Single(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              mode_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_Single_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_Single_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.tx.v1beta1.ModeInfo.Single.class, cosmos.tx.v1beta1.ModeInfo.Single.Builder.class);
    }

    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <pre>
     * mode is the signing mode of the single signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
     */
    public int getModeValue() {
      return mode_;
    }
    /**
     * <pre>
     * mode is the signing mode of the single signer
     * </pre>
     *
     * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
     */
    public cosmos.tx.signing.v1beta1.SignMode getMode() {
      @SuppressWarnings("deprecation")
      cosmos.tx.signing.v1beta1.SignMode result = cosmos.tx.signing.v1beta1.SignMode.valueOf(mode_);
      return result == null ? cosmos.tx.signing.v1beta1.SignMode.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mode_ != cosmos.tx.signing.v1beta1.SignMode.SIGN_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, mode_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mode_ != cosmos.tx.signing.v1beta1.SignMode.SIGN_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.tx.v1beta1.ModeInfo.Single)) {
        return super.equals(obj);
      }
      cosmos.tx.v1beta1.ModeInfo.Single other = (cosmos.tx.v1beta1.ModeInfo.Single) obj;

      if (mode_ != other.mode_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.tx.v1beta1.ModeInfo.Single parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Single parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Single parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Single parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Single parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Single parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Single parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Single parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Single parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Single parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Single parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Single parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.tx.v1beta1.ModeInfo.Single prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Single is the mode info for a single signer. It is structured as a message
     * to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
     * future
     * </pre>
     *
     * Protobuf type {@code cosmos.tx.v1beta1.ModeInfo.Single}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.tx.v1beta1.ModeInfo.Single)
        cosmos.tx.v1beta1.ModeInfo.SingleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_Single_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_Single_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.tx.v1beta1.ModeInfo.Single.class, cosmos.tx.v1beta1.ModeInfo.Single.Builder.class);
      }

      // Construct using cosmos.tx.v1beta1.ModeInfo.Single.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        mode_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_Single_descriptor;
      }

      @java.lang.Override
      public cosmos.tx.v1beta1.ModeInfo.Single getDefaultInstanceForType() {
        return cosmos.tx.v1beta1.ModeInfo.Single.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.tx.v1beta1.ModeInfo.Single build() {
        cosmos.tx.v1beta1.ModeInfo.Single result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.tx.v1beta1.ModeInfo.Single buildPartial() {
        cosmos.tx.v1beta1.ModeInfo.Single result = new cosmos.tx.v1beta1.ModeInfo.Single(this);
        result.mode_ = mode_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.tx.v1beta1.ModeInfo.Single) {
          return mergeFrom((cosmos.tx.v1beta1.ModeInfo.Single)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.tx.v1beta1.ModeInfo.Single other) {
        if (other == cosmos.tx.v1beta1.ModeInfo.Single.getDefaultInstance()) return this;
        if (other.mode_ != 0) {
          setModeValue(other.getModeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cosmos.tx.v1beta1.ModeInfo.Single parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cosmos.tx.v1beta1.ModeInfo.Single) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int mode_ = 0;
      /**
       * <pre>
       * mode is the signing mode of the single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
       */
      public int getModeValue() {
        return mode_;
      }
      /**
       * <pre>
       * mode is the signing mode of the single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
       */
      public Builder setModeValue(int value) {
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * mode is the signing mode of the single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
       */
      public cosmos.tx.signing.v1beta1.SignMode getMode() {
        @SuppressWarnings("deprecation")
        cosmos.tx.signing.v1beta1.SignMode result = cosmos.tx.signing.v1beta1.SignMode.valueOf(mode_);
        return result == null ? cosmos.tx.signing.v1beta1.SignMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * mode is the signing mode of the single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
       */
      public Builder setMode(cosmos.tx.signing.v1beta1.SignMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * mode is the signing mode of the single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
       */
      public Builder clearMode() {
        
        mode_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.tx.v1beta1.ModeInfo.Single)
    }

    // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.ModeInfo.Single)
    private static final cosmos.tx.v1beta1.ModeInfo.Single DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.tx.v1beta1.ModeInfo.Single();
    }

    public static cosmos.tx.v1beta1.ModeInfo.Single getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Single>
        PARSER = new com.google.protobuf.AbstractParser<Single>() {
      @java.lang.Override
      public Single parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Single(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Single> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Single> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.tx.v1beta1.ModeInfo.Single getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultiOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.tx.v1beta1.ModeInfo.Multi)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * bitarray specifies which keys within the multisig are signing
     * </pre>
     *
     * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
     */
    boolean hasBitarray();
    /**
     * <pre>
     * bitarray specifies which keys within the multisig are signing
     * </pre>
     *
     * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
     */
    cosmos.crypto.multisig.v1beta1.CompactBitArray getBitarray();
    /**
     * <pre>
     * bitarray specifies which keys within the multisig are signing
     * </pre>
     *
     * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
     */
    cosmos.crypto.multisig.v1beta1.CompactBitArrayOrBuilder getBitarrayOrBuilder();

    /**
     * <pre>
     * mode_infos is the corresponding modes of the signers of the multisig
     * which could include nested multisig public keys
     * </pre>
     *
     * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
     */
    java.util.List<cosmos.tx.v1beta1.ModeInfo> 
        getModeInfosList();
    /**
     * <pre>
     * mode_infos is the corresponding modes of the signers of the multisig
     * which could include nested multisig public keys
     * </pre>
     *
     * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
     */
    cosmos.tx.v1beta1.ModeInfo getModeInfos(int index);
    /**
     * <pre>
     * mode_infos is the corresponding modes of the signers of the multisig
     * which could include nested multisig public keys
     * </pre>
     *
     * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
     */
    int getModeInfosCount();
    /**
     * <pre>
     * mode_infos is the corresponding modes of the signers of the multisig
     * which could include nested multisig public keys
     * </pre>
     *
     * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
     */
    java.util.List<? extends cosmos.tx.v1beta1.ModeInfoOrBuilder> 
        getModeInfosOrBuilderList();
    /**
     * <pre>
     * mode_infos is the corresponding modes of the signers of the multisig
     * which could include nested multisig public keys
     * </pre>
     *
     * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
     */
    cosmos.tx.v1beta1.ModeInfoOrBuilder getModeInfosOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Multi is the mode info for a multisig public key
   * </pre>
   *
   * Protobuf type {@code cosmos.tx.v1beta1.ModeInfo.Multi}
   */
  public  static final class Multi extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.tx.v1beta1.ModeInfo.Multi)
      MultiOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Multi.newBuilder() to construct.
    private Multi(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Multi() {
      modeInfos_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Multi(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              cosmos.crypto.multisig.v1beta1.CompactBitArray.Builder subBuilder = null;
              if (bitarray_ != null) {
                subBuilder = bitarray_.toBuilder();
              }
              bitarray_ = input.readMessage(cosmos.crypto.multisig.v1beta1.CompactBitArray.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bitarray_);
                bitarray_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                modeInfos_ = new java.util.ArrayList<cosmos.tx.v1beta1.ModeInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              modeInfos_.add(
                  input.readMessage(cosmos.tx.v1beta1.ModeInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          modeInfos_ = java.util.Collections.unmodifiableList(modeInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_Multi_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_Multi_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.tx.v1beta1.ModeInfo.Multi.class, cosmos.tx.v1beta1.ModeInfo.Multi.Builder.class);
    }

    private int bitField0_;
    public static final int BITARRAY_FIELD_NUMBER = 1;
    private cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray_;
    /**
     * <pre>
     * bitarray specifies which keys within the multisig are signing
     * </pre>
     *
     * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
     */
    public boolean hasBitarray() {
      return bitarray_ != null;
    }
    /**
     * <pre>
     * bitarray specifies which keys within the multisig are signing
     * </pre>
     *
     * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
     */
    public cosmos.crypto.multisig.v1beta1.CompactBitArray getBitarray() {
      return bitarray_ == null ? cosmos.crypto.multisig.v1beta1.CompactBitArray.getDefaultInstance() : bitarray_;
    }
    /**
     * <pre>
     * bitarray specifies which keys within the multisig are signing
     * </pre>
     *
     * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
     */
    public cosmos.crypto.multisig.v1beta1.CompactBitArrayOrBuilder getBitarrayOrBuilder() {
      return getBitarray();
    }

    public static final int MODE_INFOS_FIELD_NUMBER = 2;
    private java.util.List<cosmos.tx.v1beta1.ModeInfo> modeInfos_;
    /**
     * <pre>
     * mode_infos is the corresponding modes of the signers of the multisig
     * which could include nested multisig public keys
     * </pre>
     *
     * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
     */
    public java.util.List<cosmos.tx.v1beta1.ModeInfo> getModeInfosList() {
      return modeInfos_;
    }
    /**
     * <pre>
     * mode_infos is the corresponding modes of the signers of the multisig
     * which could include nested multisig public keys
     * </pre>
     *
     * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
     */
    public java.util.List<? extends cosmos.tx.v1beta1.ModeInfoOrBuilder> 
        getModeInfosOrBuilderList() {
      return modeInfos_;
    }
    /**
     * <pre>
     * mode_infos is the corresponding modes of the signers of the multisig
     * which could include nested multisig public keys
     * </pre>
     *
     * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
     */
    public int getModeInfosCount() {
      return modeInfos_.size();
    }
    /**
     * <pre>
     * mode_infos is the corresponding modes of the signers of the multisig
     * which could include nested multisig public keys
     * </pre>
     *
     * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
     */
    public cosmos.tx.v1beta1.ModeInfo getModeInfos(int index) {
      return modeInfos_.get(index);
    }
    /**
     * <pre>
     * mode_infos is the corresponding modes of the signers of the multisig
     * which could include nested multisig public keys
     * </pre>
     *
     * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
     */
    public cosmos.tx.v1beta1.ModeInfoOrBuilder getModeInfosOrBuilder(
        int index) {
      return modeInfos_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (bitarray_ != null) {
        output.writeMessage(1, getBitarray());
      }
      for (int i = 0; i < modeInfos_.size(); i++) {
        output.writeMessage(2, modeInfos_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (bitarray_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBitarray());
      }
      for (int i = 0; i < modeInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, modeInfos_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.tx.v1beta1.ModeInfo.Multi)) {
        return super.equals(obj);
      }
      cosmos.tx.v1beta1.ModeInfo.Multi other = (cosmos.tx.v1beta1.ModeInfo.Multi) obj;

      if (hasBitarray() != other.hasBitarray()) return false;
      if (hasBitarray()) {
        if (!getBitarray()
            .equals(other.getBitarray())) return false;
      }
      if (!getModeInfosList()
          .equals(other.getModeInfosList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBitarray()) {
        hash = (37 * hash) + BITARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getBitarray().hashCode();
      }
      if (getModeInfosCount() > 0) {
        hash = (37 * hash) + MODE_INFOS_FIELD_NUMBER;
        hash = (53 * hash) + getModeInfosList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.tx.v1beta1.ModeInfo.Multi parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Multi parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Multi parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Multi parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Multi parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Multi parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Multi parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Multi parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Multi parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Multi parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Multi parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.tx.v1beta1.ModeInfo.Multi parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.tx.v1beta1.ModeInfo.Multi prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Multi is the mode info for a multisig public key
     * </pre>
     *
     * Protobuf type {@code cosmos.tx.v1beta1.ModeInfo.Multi}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.tx.v1beta1.ModeInfo.Multi)
        cosmos.tx.v1beta1.ModeInfo.MultiOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_Multi_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_Multi_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.tx.v1beta1.ModeInfo.Multi.class, cosmos.tx.v1beta1.ModeInfo.Multi.Builder.class);
      }

      // Construct using cosmos.tx.v1beta1.ModeInfo.Multi.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getModeInfosFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (bitarrayBuilder_ == null) {
          bitarray_ = null;
        } else {
          bitarray_ = null;
          bitarrayBuilder_ = null;
        }
        if (modeInfosBuilder_ == null) {
          modeInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          modeInfosBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_Multi_descriptor;
      }

      @java.lang.Override
      public cosmos.tx.v1beta1.ModeInfo.Multi getDefaultInstanceForType() {
        return cosmos.tx.v1beta1.ModeInfo.Multi.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.tx.v1beta1.ModeInfo.Multi build() {
        cosmos.tx.v1beta1.ModeInfo.Multi result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.tx.v1beta1.ModeInfo.Multi buildPartial() {
        cosmos.tx.v1beta1.ModeInfo.Multi result = new cosmos.tx.v1beta1.ModeInfo.Multi(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (bitarrayBuilder_ == null) {
          result.bitarray_ = bitarray_;
        } else {
          result.bitarray_ = bitarrayBuilder_.build();
        }
        if (modeInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            modeInfos_ = java.util.Collections.unmodifiableList(modeInfos_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.modeInfos_ = modeInfos_;
        } else {
          result.modeInfos_ = modeInfosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.tx.v1beta1.ModeInfo.Multi) {
          return mergeFrom((cosmos.tx.v1beta1.ModeInfo.Multi)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.tx.v1beta1.ModeInfo.Multi other) {
        if (other == cosmos.tx.v1beta1.ModeInfo.Multi.getDefaultInstance()) return this;
        if (other.hasBitarray()) {
          mergeBitarray(other.getBitarray());
        }
        if (modeInfosBuilder_ == null) {
          if (!other.modeInfos_.isEmpty()) {
            if (modeInfos_.isEmpty()) {
              modeInfos_ = other.modeInfos_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureModeInfosIsMutable();
              modeInfos_.addAll(other.modeInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.modeInfos_.isEmpty()) {
            if (modeInfosBuilder_.isEmpty()) {
              modeInfosBuilder_.dispose();
              modeInfosBuilder_ = null;
              modeInfos_ = other.modeInfos_;
              bitField0_ = (bitField0_ & ~0x00000002);
              modeInfosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getModeInfosFieldBuilder() : null;
            } else {
              modeInfosBuilder_.addAllMessages(other.modeInfos_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cosmos.tx.v1beta1.ModeInfo.Multi parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cosmos.tx.v1beta1.ModeInfo.Multi) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray_;
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.crypto.multisig.v1beta1.CompactBitArray, cosmos.crypto.multisig.v1beta1.CompactBitArray.Builder, cosmos.crypto.multisig.v1beta1.CompactBitArrayOrBuilder> bitarrayBuilder_;
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      public boolean hasBitarray() {
        return bitarrayBuilder_ != null || bitarray_ != null;
      }
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      public cosmos.crypto.multisig.v1beta1.CompactBitArray getBitarray() {
        if (bitarrayBuilder_ == null) {
          return bitarray_ == null ? cosmos.crypto.multisig.v1beta1.CompactBitArray.getDefaultInstance() : bitarray_;
        } else {
          return bitarrayBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      public Builder setBitarray(cosmos.crypto.multisig.v1beta1.CompactBitArray value) {
        if (bitarrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitarray_ = value;
          onChanged();
        } else {
          bitarrayBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      public Builder setBitarray(
          cosmos.crypto.multisig.v1beta1.CompactBitArray.Builder builderForValue) {
        if (bitarrayBuilder_ == null) {
          bitarray_ = builderForValue.build();
          onChanged();
        } else {
          bitarrayBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      public Builder mergeBitarray(cosmos.crypto.multisig.v1beta1.CompactBitArray value) {
        if (bitarrayBuilder_ == null) {
          if (bitarray_ != null) {
            bitarray_ =
              cosmos.crypto.multisig.v1beta1.CompactBitArray.newBuilder(bitarray_).mergeFrom(value).buildPartial();
          } else {
            bitarray_ = value;
          }
          onChanged();
        } else {
          bitarrayBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      public Builder clearBitarray() {
        if (bitarrayBuilder_ == null) {
          bitarray_ = null;
          onChanged();
        } else {
          bitarray_ = null;
          bitarrayBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      public cosmos.crypto.multisig.v1beta1.CompactBitArray.Builder getBitarrayBuilder() {
        
        onChanged();
        return getBitarrayFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      public cosmos.crypto.multisig.v1beta1.CompactBitArrayOrBuilder getBitarrayOrBuilder() {
        if (bitarrayBuilder_ != null) {
          return bitarrayBuilder_.getMessageOrBuilder();
        } else {
          return bitarray_ == null ?
              cosmos.crypto.multisig.v1beta1.CompactBitArray.getDefaultInstance() : bitarray_;
        }
      }
      /**
       * <pre>
       * bitarray specifies which keys within the multisig are signing
       * </pre>
       *
       * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.crypto.multisig.v1beta1.CompactBitArray, cosmos.crypto.multisig.v1beta1.CompactBitArray.Builder, cosmos.crypto.multisig.v1beta1.CompactBitArrayOrBuilder> 
          getBitarrayFieldBuilder() {
        if (bitarrayBuilder_ == null) {
          bitarrayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.crypto.multisig.v1beta1.CompactBitArray, cosmos.crypto.multisig.v1beta1.CompactBitArray.Builder, cosmos.crypto.multisig.v1beta1.CompactBitArrayOrBuilder>(
                  getBitarray(),
                  getParentForChildren(),
                  isClean());
          bitarray_ = null;
        }
        return bitarrayBuilder_;
      }

      private java.util.List<cosmos.tx.v1beta1.ModeInfo> modeInfos_ =
        java.util.Collections.emptyList();
      private void ensureModeInfosIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          modeInfos_ = new java.util.ArrayList<cosmos.tx.v1beta1.ModeInfo>(modeInfos_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.tx.v1beta1.ModeInfo, cosmos.tx.v1beta1.ModeInfo.Builder, cosmos.tx.v1beta1.ModeInfoOrBuilder> modeInfosBuilder_;

      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public java.util.List<cosmos.tx.v1beta1.ModeInfo> getModeInfosList() {
        if (modeInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(modeInfos_);
        } else {
          return modeInfosBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public int getModeInfosCount() {
        if (modeInfosBuilder_ == null) {
          return modeInfos_.size();
        } else {
          return modeInfosBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public cosmos.tx.v1beta1.ModeInfo getModeInfos(int index) {
        if (modeInfosBuilder_ == null) {
          return modeInfos_.get(index);
        } else {
          return modeInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public Builder setModeInfos(
          int index, cosmos.tx.v1beta1.ModeInfo value) {
        if (modeInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModeInfosIsMutable();
          modeInfos_.set(index, value);
          onChanged();
        } else {
          modeInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public Builder setModeInfos(
          int index, cosmos.tx.v1beta1.ModeInfo.Builder builderForValue) {
        if (modeInfosBuilder_ == null) {
          ensureModeInfosIsMutable();
          modeInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          modeInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public Builder addModeInfos(cosmos.tx.v1beta1.ModeInfo value) {
        if (modeInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModeInfosIsMutable();
          modeInfos_.add(value);
          onChanged();
        } else {
          modeInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public Builder addModeInfos(
          int index, cosmos.tx.v1beta1.ModeInfo value) {
        if (modeInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModeInfosIsMutable();
          modeInfos_.add(index, value);
          onChanged();
        } else {
          modeInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public Builder addModeInfos(
          cosmos.tx.v1beta1.ModeInfo.Builder builderForValue) {
        if (modeInfosBuilder_ == null) {
          ensureModeInfosIsMutable();
          modeInfos_.add(builderForValue.build());
          onChanged();
        } else {
          modeInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public Builder addModeInfos(
          int index, cosmos.tx.v1beta1.ModeInfo.Builder builderForValue) {
        if (modeInfosBuilder_ == null) {
          ensureModeInfosIsMutable();
          modeInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          modeInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public Builder addAllModeInfos(
          java.lang.Iterable<? extends cosmos.tx.v1beta1.ModeInfo> values) {
        if (modeInfosBuilder_ == null) {
          ensureModeInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, modeInfos_);
          onChanged();
        } else {
          modeInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public Builder clearModeInfos() {
        if (modeInfosBuilder_ == null) {
          modeInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          modeInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public Builder removeModeInfos(int index) {
        if (modeInfosBuilder_ == null) {
          ensureModeInfosIsMutable();
          modeInfos_.remove(index);
          onChanged();
        } else {
          modeInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public cosmos.tx.v1beta1.ModeInfo.Builder getModeInfosBuilder(
          int index) {
        return getModeInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public cosmos.tx.v1beta1.ModeInfoOrBuilder getModeInfosOrBuilder(
          int index) {
        if (modeInfosBuilder_ == null) {
          return modeInfos_.get(index);  } else {
          return modeInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public java.util.List<? extends cosmos.tx.v1beta1.ModeInfoOrBuilder> 
           getModeInfosOrBuilderList() {
        if (modeInfosBuilder_ != null) {
          return modeInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(modeInfos_);
        }
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public cosmos.tx.v1beta1.ModeInfo.Builder addModeInfosBuilder() {
        return getModeInfosFieldBuilder().addBuilder(
            cosmos.tx.v1beta1.ModeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public cosmos.tx.v1beta1.ModeInfo.Builder addModeInfosBuilder(
          int index) {
        return getModeInfosFieldBuilder().addBuilder(
            index, cosmos.tx.v1beta1.ModeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       * </pre>
       *
       * <code>repeated .cosmos.tx.v1beta1.ModeInfo mode_infos = 2;</code>
       */
      public java.util.List<cosmos.tx.v1beta1.ModeInfo.Builder> 
           getModeInfosBuilderList() {
        return getModeInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.tx.v1beta1.ModeInfo, cosmos.tx.v1beta1.ModeInfo.Builder, cosmos.tx.v1beta1.ModeInfoOrBuilder> 
          getModeInfosFieldBuilder() {
        if (modeInfosBuilder_ == null) {
          modeInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.tx.v1beta1.ModeInfo, cosmos.tx.v1beta1.ModeInfo.Builder, cosmos.tx.v1beta1.ModeInfoOrBuilder>(
                  modeInfos_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          modeInfos_ = null;
        }
        return modeInfosBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.tx.v1beta1.ModeInfo.Multi)
    }

    // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.ModeInfo.Multi)
    private static final cosmos.tx.v1beta1.ModeInfo.Multi DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.tx.v1beta1.ModeInfo.Multi();
    }

    public static cosmos.tx.v1beta1.ModeInfo.Multi getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Multi>
        PARSER = new com.google.protobuf.AbstractParser<Multi>() {
      @java.lang.Override
      public Multi parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Multi(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Multi> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Multi> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.tx.v1beta1.ModeInfo.Multi getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int sumCase_ = 0;
  private java.lang.Object sum_;
  public enum SumCase
      implements com.google.protobuf.Internal.EnumLite {
    SINGLE(1),
    MULTI(2),
    SUM_NOT_SET(0);
    private final int value;
    private SumCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SumCase valueOf(int value) {
      return forNumber(value);
    }

    public static SumCase forNumber(int value) {
      switch (value) {
        case 1: return SINGLE;
        case 2: return MULTI;
        case 0: return SUM_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public SumCase
  getSumCase() {
    return SumCase.forNumber(
        sumCase_);
  }

  public static final int SINGLE_FIELD_NUMBER = 1;
  /**
   * <pre>
   * single represents a single signer
   * </pre>
   *
   * <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1;</code>
   */
  public boolean hasSingle() {
    return sumCase_ == 1;
  }
  /**
   * <pre>
   * single represents a single signer
   * </pre>
   *
   * <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1;</code>
   */
  public cosmos.tx.v1beta1.ModeInfo.Single getSingle() {
    if (sumCase_ == 1) {
       return (cosmos.tx.v1beta1.ModeInfo.Single) sum_;
    }
    return cosmos.tx.v1beta1.ModeInfo.Single.getDefaultInstance();
  }
  /**
   * <pre>
   * single represents a single signer
   * </pre>
   *
   * <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1;</code>
   */
  public cosmos.tx.v1beta1.ModeInfo.SingleOrBuilder getSingleOrBuilder() {
    if (sumCase_ == 1) {
       return (cosmos.tx.v1beta1.ModeInfo.Single) sum_;
    }
    return cosmos.tx.v1beta1.ModeInfo.Single.getDefaultInstance();
  }

  public static final int MULTI_FIELD_NUMBER = 2;
  /**
   * <pre>
   * multi represents a nested multisig signer
   * </pre>
   *
   * <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2;</code>
   */
  public boolean hasMulti() {
    return sumCase_ == 2;
  }
  /**
   * <pre>
   * multi represents a nested multisig signer
   * </pre>
   *
   * <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2;</code>
   */
  public cosmos.tx.v1beta1.ModeInfo.Multi getMulti() {
    if (sumCase_ == 2) {
       return (cosmos.tx.v1beta1.ModeInfo.Multi) sum_;
    }
    return cosmos.tx.v1beta1.ModeInfo.Multi.getDefaultInstance();
  }
  /**
   * <pre>
   * multi represents a nested multisig signer
   * </pre>
   *
   * <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2;</code>
   */
  public cosmos.tx.v1beta1.ModeInfo.MultiOrBuilder getMultiOrBuilder() {
    if (sumCase_ == 2) {
       return (cosmos.tx.v1beta1.ModeInfo.Multi) sum_;
    }
    return cosmos.tx.v1beta1.ModeInfo.Multi.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (sumCase_ == 1) {
      output.writeMessage(1, (cosmos.tx.v1beta1.ModeInfo.Single) sum_);
    }
    if (sumCase_ == 2) {
      output.writeMessage(2, (cosmos.tx.v1beta1.ModeInfo.Multi) sum_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sumCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (cosmos.tx.v1beta1.ModeInfo.Single) sum_);
    }
    if (sumCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (cosmos.tx.v1beta1.ModeInfo.Multi) sum_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof cosmos.tx.v1beta1.ModeInfo)) {
      return super.equals(obj);
    }
    cosmos.tx.v1beta1.ModeInfo other = (cosmos.tx.v1beta1.ModeInfo) obj;

    if (!getSumCase().equals(other.getSumCase())) return false;
    switch (sumCase_) {
      case 1:
        if (!getSingle()
            .equals(other.getSingle())) return false;
        break;
      case 2:
        if (!getMulti()
            .equals(other.getMulti())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (sumCase_) {
      case 1:
        hash = (37 * hash) + SINGLE_FIELD_NUMBER;
        hash = (53 * hash) + getSingle().hashCode();
        break;
      case 2:
        hash = (37 * hash) + MULTI_FIELD_NUMBER;
        hash = (53 * hash) + getMulti().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static cosmos.tx.v1beta1.ModeInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cosmos.tx.v1beta1.ModeInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cosmos.tx.v1beta1.ModeInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cosmos.tx.v1beta1.ModeInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cosmos.tx.v1beta1.ModeInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cosmos.tx.v1beta1.ModeInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cosmos.tx.v1beta1.ModeInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static cosmos.tx.v1beta1.ModeInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static cosmos.tx.v1beta1.ModeInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static cosmos.tx.v1beta1.ModeInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static cosmos.tx.v1beta1.ModeInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static cosmos.tx.v1beta1.ModeInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(cosmos.tx.v1beta1.ModeInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * ModeInfo describes the signing mode of a single or nested multisig signer.
   * </pre>
   *
   * Protobuf type {@code cosmos.tx.v1beta1.ModeInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:cosmos.tx.v1beta1.ModeInfo)
      cosmos.tx.v1beta1.ModeInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.tx.v1beta1.ModeInfo.class, cosmos.tx.v1beta1.ModeInfo.Builder.class);
    }

    // Construct using cosmos.tx.v1beta1.ModeInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      sumCase_ = 0;
      sum_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return cosmos.tx.v1beta1.TxOuterClass.internal_static_cosmos_tx_v1beta1_ModeInfo_descriptor;
    }

    @java.lang.Override
    public cosmos.tx.v1beta1.ModeInfo getDefaultInstanceForType() {
      return cosmos.tx.v1beta1.ModeInfo.getDefaultInstance();
    }

    @java.lang.Override
    public cosmos.tx.v1beta1.ModeInfo build() {
      cosmos.tx.v1beta1.ModeInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public cosmos.tx.v1beta1.ModeInfo buildPartial() {
      cosmos.tx.v1beta1.ModeInfo result = new cosmos.tx.v1beta1.ModeInfo(this);
      if (sumCase_ == 1) {
        if (singleBuilder_ == null) {
          result.sum_ = sum_;
        } else {
          result.sum_ = singleBuilder_.build();
        }
      }
      if (sumCase_ == 2) {
        if (multiBuilder_ == null) {
          result.sum_ = sum_;
        } else {
          result.sum_ = multiBuilder_.build();
        }
      }
      result.sumCase_ = sumCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof cosmos.tx.v1beta1.ModeInfo) {
        return mergeFrom((cosmos.tx.v1beta1.ModeInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(cosmos.tx.v1beta1.ModeInfo other) {
      if (other == cosmos.tx.v1beta1.ModeInfo.getDefaultInstance()) return this;
      switch (other.getSumCase()) {
        case SINGLE: {
          mergeSingle(other.getSingle());
          break;
        }
        case MULTI: {
          mergeMulti(other.getMulti());
          break;
        }
        case SUM_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      cosmos.tx.v1beta1.ModeInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (cosmos.tx.v1beta1.ModeInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int sumCase_ = 0;
    private java.lang.Object sum_;
    public SumCase
        getSumCase() {
      return SumCase.forNumber(
          sumCase_);
    }

    public Builder clearSum() {
      sumCase_ = 0;
      sum_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        cosmos.tx.v1beta1.ModeInfo.Single, cosmos.tx.v1beta1.ModeInfo.Single.Builder, cosmos.tx.v1beta1.ModeInfo.SingleOrBuilder> singleBuilder_;
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1;</code>
     */
    public boolean hasSingle() {
      return sumCase_ == 1;
    }
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1;</code>
     */
    public cosmos.tx.v1beta1.ModeInfo.Single getSingle() {
      if (singleBuilder_ == null) {
        if (sumCase_ == 1) {
          return (cosmos.tx.v1beta1.ModeInfo.Single) sum_;
        }
        return cosmos.tx.v1beta1.ModeInfo.Single.getDefaultInstance();
      } else {
        if (sumCase_ == 1) {
          return singleBuilder_.getMessage();
        }
        return cosmos.tx.v1beta1.ModeInfo.Single.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1;</code>
     */
    public Builder setSingle(cosmos.tx.v1beta1.ModeInfo.Single value) {
      if (singleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sum_ = value;
        onChanged();
      } else {
        singleBuilder_.setMessage(value);
      }
      sumCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1;</code>
     */
    public Builder setSingle(
        cosmos.tx.v1beta1.ModeInfo.Single.Builder builderForValue) {
      if (singleBuilder_ == null) {
        sum_ = builderForValue.build();
        onChanged();
      } else {
        singleBuilder_.setMessage(builderForValue.build());
      }
      sumCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1;</code>
     */
    public Builder mergeSingle(cosmos.tx.v1beta1.ModeInfo.Single value) {
      if (singleBuilder_ == null) {
        if (sumCase_ == 1 &&
            sum_ != cosmos.tx.v1beta1.ModeInfo.Single.getDefaultInstance()) {
          sum_ = cosmos.tx.v1beta1.ModeInfo.Single.newBuilder((cosmos.tx.v1beta1.ModeInfo.Single) sum_)
              .mergeFrom(value).buildPartial();
        } else {
          sum_ = value;
        }
        onChanged();
      } else {
        if (sumCase_ == 1) {
          singleBuilder_.mergeFrom(value);
        }
        singleBuilder_.setMessage(value);
      }
      sumCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1;</code>
     */
    public Builder clearSingle() {
      if (singleBuilder_ == null) {
        if (sumCase_ == 1) {
          sumCase_ = 0;
          sum_ = null;
          onChanged();
        }
      } else {
        if (sumCase_ == 1) {
          sumCase_ = 0;
          sum_ = null;
        }
        singleBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1;</code>
     */
    public cosmos.tx.v1beta1.ModeInfo.Single.Builder getSingleBuilder() {
      return getSingleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1;</code>
     */
    public cosmos.tx.v1beta1.ModeInfo.SingleOrBuilder getSingleOrBuilder() {
      if ((sumCase_ == 1) && (singleBuilder_ != null)) {
        return singleBuilder_.getMessageOrBuilder();
      } else {
        if (sumCase_ == 1) {
          return (cosmos.tx.v1beta1.ModeInfo.Single) sum_;
        }
        return cosmos.tx.v1beta1.ModeInfo.Single.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * single represents a single signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        cosmos.tx.v1beta1.ModeInfo.Single, cosmos.tx.v1beta1.ModeInfo.Single.Builder, cosmos.tx.v1beta1.ModeInfo.SingleOrBuilder> 
        getSingleFieldBuilder() {
      if (singleBuilder_ == null) {
        if (!(sumCase_ == 1)) {
          sum_ = cosmos.tx.v1beta1.ModeInfo.Single.getDefaultInstance();
        }
        singleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            cosmos.tx.v1beta1.ModeInfo.Single, cosmos.tx.v1beta1.ModeInfo.Single.Builder, cosmos.tx.v1beta1.ModeInfo.SingleOrBuilder>(
                (cosmos.tx.v1beta1.ModeInfo.Single) sum_,
                getParentForChildren(),
                isClean());
        sum_ = null;
      }
      sumCase_ = 1;
      onChanged();;
      return singleBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        cosmos.tx.v1beta1.ModeInfo.Multi, cosmos.tx.v1beta1.ModeInfo.Multi.Builder, cosmos.tx.v1beta1.ModeInfo.MultiOrBuilder> multiBuilder_;
    /**
     * <pre>
     * multi represents a nested multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2;</code>
     */
    public boolean hasMulti() {
      return sumCase_ == 2;
    }
    /**
     * <pre>
     * multi represents a nested multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2;</code>
     */
    public cosmos.tx.v1beta1.ModeInfo.Multi getMulti() {
      if (multiBuilder_ == null) {
        if (sumCase_ == 2) {
          return (cosmos.tx.v1beta1.ModeInfo.Multi) sum_;
        }
        return cosmos.tx.v1beta1.ModeInfo.Multi.getDefaultInstance();
      } else {
        if (sumCase_ == 2) {
          return multiBuilder_.getMessage();
        }
        return cosmos.tx.v1beta1.ModeInfo.Multi.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * multi represents a nested multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2;</code>
     */
    public Builder setMulti(cosmos.tx.v1beta1.ModeInfo.Multi value) {
      if (multiBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sum_ = value;
        onChanged();
      } else {
        multiBuilder_.setMessage(value);
      }
      sumCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * multi represents a nested multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2;</code>
     */
    public Builder setMulti(
        cosmos.tx.v1beta1.ModeInfo.Multi.Builder builderForValue) {
      if (multiBuilder_ == null) {
        sum_ = builderForValue.build();
        onChanged();
      } else {
        multiBuilder_.setMessage(builderForValue.build());
      }
      sumCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * multi represents a nested multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2;</code>
     */
    public Builder mergeMulti(cosmos.tx.v1beta1.ModeInfo.Multi value) {
      if (multiBuilder_ == null) {
        if (sumCase_ == 2 &&
            sum_ != cosmos.tx.v1beta1.ModeInfo.Multi.getDefaultInstance()) {
          sum_ = cosmos.tx.v1beta1.ModeInfo.Multi.newBuilder((cosmos.tx.v1beta1.ModeInfo.Multi) sum_)
              .mergeFrom(value).buildPartial();
        } else {
          sum_ = value;
        }
        onChanged();
      } else {
        if (sumCase_ == 2) {
          multiBuilder_.mergeFrom(value);
        }
        multiBuilder_.setMessage(value);
      }
      sumCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * multi represents a nested multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2;</code>
     */
    public Builder clearMulti() {
      if (multiBuilder_ == null) {
        if (sumCase_ == 2) {
          sumCase_ = 0;
          sum_ = null;
          onChanged();
        }
      } else {
        if (sumCase_ == 2) {
          sumCase_ = 0;
          sum_ = null;
        }
        multiBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * multi represents a nested multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2;</code>
     */
    public cosmos.tx.v1beta1.ModeInfo.Multi.Builder getMultiBuilder() {
      return getMultiFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * multi represents a nested multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2;</code>
     */
    public cosmos.tx.v1beta1.ModeInfo.MultiOrBuilder getMultiOrBuilder() {
      if ((sumCase_ == 2) && (multiBuilder_ != null)) {
        return multiBuilder_.getMessageOrBuilder();
      } else {
        if (sumCase_ == 2) {
          return (cosmos.tx.v1beta1.ModeInfo.Multi) sum_;
        }
        return cosmos.tx.v1beta1.ModeInfo.Multi.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * multi represents a nested multisig signer
     * </pre>
     *
     * <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        cosmos.tx.v1beta1.ModeInfo.Multi, cosmos.tx.v1beta1.ModeInfo.Multi.Builder, cosmos.tx.v1beta1.ModeInfo.MultiOrBuilder> 
        getMultiFieldBuilder() {
      if (multiBuilder_ == null) {
        if (!(sumCase_ == 2)) {
          sum_ = cosmos.tx.v1beta1.ModeInfo.Multi.getDefaultInstance();
        }
        multiBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            cosmos.tx.v1beta1.ModeInfo.Multi, cosmos.tx.v1beta1.ModeInfo.Multi.Builder, cosmos.tx.v1beta1.ModeInfo.MultiOrBuilder>(
                (cosmos.tx.v1beta1.ModeInfo.Multi) sum_,
                getParentForChildren(),
                isClean());
        sum_ = null;
      }
      sumCase_ = 2;
      onChanged();;
      return multiBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:cosmos.tx.v1beta1.ModeInfo)
  }

  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.ModeInfo)
  private static final cosmos.tx.v1beta1.ModeInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new cosmos.tx.v1beta1.ModeInfo();
  }

  public static cosmos.tx.v1beta1.ModeInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ModeInfo>
      PARSER = new com.google.protobuf.AbstractParser<ModeInfo>() {
    @java.lang.Override
    public ModeInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ModeInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ModeInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ModeInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public cosmos.tx.v1beta1.ModeInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

