// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/upgrade/v1beta1/upgrade.proto

package cosmos.upgrade.v1beta1;

/**
 * <pre>
 * Plan specifies information about a planned upgrade and when it should occur.
 * </pre>
 *
 * Protobuf type {@code cosmos.upgrade.v1beta1.Plan}
 */
public  final class Plan extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:cosmos.upgrade.v1beta1.Plan)
    PlanOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Plan.newBuilder() to construct.
  private Plan(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Plan() {
    name_ = "";
    info_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Plan(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (time_ != null) {
              subBuilder = time_.toBuilder();
            }
            time_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(time_);
              time_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {

            height_ = input.readInt64();
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            info_ = s;
            break;
          }
          case 42: {
            com.google.protobuf.Any.Builder subBuilder = null;
            if (upgradedClientState_ != null) {
              subBuilder = upgradedClientState_.toBuilder();
            }
            upgradedClientState_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(upgradedClientState_);
              upgradedClientState_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return cosmos.upgrade.v1beta1.Upgrade.internal_static_cosmos_upgrade_v1beta1_Plan_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return cosmos.upgrade.v1beta1.Upgrade.internal_static_cosmos_upgrade_v1beta1_Plan_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            cosmos.upgrade.v1beta1.Plan.class, cosmos.upgrade.v1beta1.Plan.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Sets the name for the upgrade. This name will be used by the upgraded
   * version of the software to apply any special "on-upgrade" commands during
   * the first BeginBlock method after the upgrade is applied. It is also used
   * to detect whether a software version can handle a given upgrade. If no
   * upgrade handler with this name has been set in the software, it will be
   * assumed that the software is out-of-date when the upgrade Time or Height is
   * reached and the software will exit.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Sets the name for the upgrade. This name will be used by the upgraded
   * version of the software to apply any special "on-upgrade" commands during
   * the first BeginBlock method after the upgrade is applied. It is also used
   * to detect whether a software version can handle a given upgrade. If no
   * upgrade handler with this name has been set in the software, it will be
   * assumed that the software is out-of-date when the upgrade Time or Height is
   * reached and the software will exit.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TIME_FIELD_NUMBER = 2;
  private com.google.protobuf.Timestamp time_;
  /**
   * <pre>
   * The time after which the upgrade must be performed.
   * Leave set to its zero value to use a pre-defined Height instead.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp time = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   */
  public boolean hasTime() {
    return time_ != null;
  }
  /**
   * <pre>
   * The time after which the upgrade must be performed.
   * Leave set to its zero value to use a pre-defined Height instead.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp time = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   */
  public com.google.protobuf.Timestamp getTime() {
    return time_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : time_;
  }
  /**
   * <pre>
   * The time after which the upgrade must be performed.
   * Leave set to its zero value to use a pre-defined Height instead.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp time = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   */
  public com.google.protobuf.TimestampOrBuilder getTimeOrBuilder() {
    return getTime();
  }

  public static final int HEIGHT_FIELD_NUMBER = 3;
  private long height_;
  /**
   * <pre>
   * The height at which the upgrade must be performed.
   * Only used if Time is not set.
   * </pre>
   *
   * <code>int64 height = 3;</code>
   */
  public long getHeight() {
    return height_;
  }

  public static final int INFO_FIELD_NUMBER = 4;
  private volatile java.lang.Object info_;
  /**
   * <pre>
   * Any application specific upgrade info to be included on-chain
   * such as a git commit that validators could automatically upgrade to
   * </pre>
   *
   * <code>string info = 4;</code>
   */
  public java.lang.String getInfo() {
    java.lang.Object ref = info_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      info_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Any application specific upgrade info to be included on-chain
   * such as a git commit that validators could automatically upgrade to
   * </pre>
   *
   * <code>string info = 4;</code>
   */
  public com.google.protobuf.ByteString
      getInfoBytes() {
    java.lang.Object ref = info_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      info_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UPGRADED_CLIENT_STATE_FIELD_NUMBER = 5;
  private com.google.protobuf.Any upgradedClientState_;
  /**
   * <pre>
   * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan
   * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,
   * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the
   * previous version of the chain.
   * This will allow IBC connections to persist smoothly across planned chain upgrades
   * </pre>
   *
   * <code>.google.protobuf.Any upgraded_client_state = 5 [(.gogoproto.moretags) = "yaml:&#92;"upgraded_client_state&#92;""];</code>
   */
  public boolean hasUpgradedClientState() {
    return upgradedClientState_ != null;
  }
  /**
   * <pre>
   * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan
   * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,
   * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the
   * previous version of the chain.
   * This will allow IBC connections to persist smoothly across planned chain upgrades
   * </pre>
   *
   * <code>.google.protobuf.Any upgraded_client_state = 5 [(.gogoproto.moretags) = "yaml:&#92;"upgraded_client_state&#92;""];</code>
   */
  public com.google.protobuf.Any getUpgradedClientState() {
    return upgradedClientState_ == null ? com.google.protobuf.Any.getDefaultInstance() : upgradedClientState_;
  }
  /**
   * <pre>
   * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan
   * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,
   * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the
   * previous version of the chain.
   * This will allow IBC connections to persist smoothly across planned chain upgrades
   * </pre>
   *
   * <code>.google.protobuf.Any upgraded_client_state = 5 [(.gogoproto.moretags) = "yaml:&#92;"upgraded_client_state&#92;""];</code>
   */
  public com.google.protobuf.AnyOrBuilder getUpgradedClientStateOrBuilder() {
    return getUpgradedClientState();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (time_ != null) {
      output.writeMessage(2, getTime());
    }
    if (height_ != 0L) {
      output.writeInt64(3, height_);
    }
    if (!getInfoBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, info_);
    }
    if (upgradedClientState_ != null) {
      output.writeMessage(5, getUpgradedClientState());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (time_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTime());
    }
    if (height_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, height_);
    }
    if (!getInfoBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, info_);
    }
    if (upgradedClientState_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getUpgradedClientState());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof cosmos.upgrade.v1beta1.Plan)) {
      return super.equals(obj);
    }
    cosmos.upgrade.v1beta1.Plan other = (cosmos.upgrade.v1beta1.Plan) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (hasTime() != other.hasTime()) return false;
    if (hasTime()) {
      if (!getTime()
          .equals(other.getTime())) return false;
    }
    if (getHeight()
        != other.getHeight()) return false;
    if (!getInfo()
        .equals(other.getInfo())) return false;
    if (hasUpgradedClientState() != other.hasUpgradedClientState()) return false;
    if (hasUpgradedClientState()) {
      if (!getUpgradedClientState()
          .equals(other.getUpgradedClientState())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasTime()) {
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime().hashCode();
    }
    hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getHeight());
    hash = (37 * hash) + INFO_FIELD_NUMBER;
    hash = (53 * hash) + getInfo().hashCode();
    if (hasUpgradedClientState()) {
      hash = (37 * hash) + UPGRADED_CLIENT_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getUpgradedClientState().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static cosmos.upgrade.v1beta1.Plan parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cosmos.upgrade.v1beta1.Plan parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cosmos.upgrade.v1beta1.Plan parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cosmos.upgrade.v1beta1.Plan parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cosmos.upgrade.v1beta1.Plan parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cosmos.upgrade.v1beta1.Plan parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cosmos.upgrade.v1beta1.Plan parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static cosmos.upgrade.v1beta1.Plan parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static cosmos.upgrade.v1beta1.Plan parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static cosmos.upgrade.v1beta1.Plan parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static cosmos.upgrade.v1beta1.Plan parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static cosmos.upgrade.v1beta1.Plan parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(cosmos.upgrade.v1beta1.Plan prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Plan specifies information about a planned upgrade and when it should occur.
   * </pre>
   *
   * Protobuf type {@code cosmos.upgrade.v1beta1.Plan}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:cosmos.upgrade.v1beta1.Plan)
      cosmos.upgrade.v1beta1.PlanOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.upgrade.v1beta1.Upgrade.internal_static_cosmos_upgrade_v1beta1_Plan_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.upgrade.v1beta1.Upgrade.internal_static_cosmos_upgrade_v1beta1_Plan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.upgrade.v1beta1.Plan.class, cosmos.upgrade.v1beta1.Plan.Builder.class);
    }

    // Construct using cosmos.upgrade.v1beta1.Plan.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      if (timeBuilder_ == null) {
        time_ = null;
      } else {
        time_ = null;
        timeBuilder_ = null;
      }
      height_ = 0L;

      info_ = "";

      if (upgradedClientStateBuilder_ == null) {
        upgradedClientState_ = null;
      } else {
        upgradedClientState_ = null;
        upgradedClientStateBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return cosmos.upgrade.v1beta1.Upgrade.internal_static_cosmos_upgrade_v1beta1_Plan_descriptor;
    }

    @java.lang.Override
    public cosmos.upgrade.v1beta1.Plan getDefaultInstanceForType() {
      return cosmos.upgrade.v1beta1.Plan.getDefaultInstance();
    }

    @java.lang.Override
    public cosmos.upgrade.v1beta1.Plan build() {
      cosmos.upgrade.v1beta1.Plan result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public cosmos.upgrade.v1beta1.Plan buildPartial() {
      cosmos.upgrade.v1beta1.Plan result = new cosmos.upgrade.v1beta1.Plan(this);
      result.name_ = name_;
      if (timeBuilder_ == null) {
        result.time_ = time_;
      } else {
        result.time_ = timeBuilder_.build();
      }
      result.height_ = height_;
      result.info_ = info_;
      if (upgradedClientStateBuilder_ == null) {
        result.upgradedClientState_ = upgradedClientState_;
      } else {
        result.upgradedClientState_ = upgradedClientStateBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof cosmos.upgrade.v1beta1.Plan) {
        return mergeFrom((cosmos.upgrade.v1beta1.Plan)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(cosmos.upgrade.v1beta1.Plan other) {
      if (other == cosmos.upgrade.v1beta1.Plan.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasTime()) {
        mergeTime(other.getTime());
      }
      if (other.getHeight() != 0L) {
        setHeight(other.getHeight());
      }
      if (!other.getInfo().isEmpty()) {
        info_ = other.info_;
        onChanged();
      }
      if (other.hasUpgradedClientState()) {
        mergeUpgradedClientState(other.getUpgradedClientState());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      cosmos.upgrade.v1beta1.Plan parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (cosmos.upgrade.v1beta1.Plan) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Sets the name for the upgrade. This name will be used by the upgraded
     * version of the software to apply any special "on-upgrade" commands during
     * the first BeginBlock method after the upgrade is applied. It is also used
     * to detect whether a software version can handle a given upgrade. If no
     * upgrade handler with this name has been set in the software, it will be
     * assumed that the software is out-of-date when the upgrade Time or Height is
     * reached and the software will exit.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Sets the name for the upgrade. This name will be used by the upgraded
     * version of the software to apply any special "on-upgrade" commands during
     * the first BeginBlock method after the upgrade is applied. It is also used
     * to detect whether a software version can handle a given upgrade. If no
     * upgrade handler with this name has been set in the software, it will be
     * assumed that the software is out-of-date when the upgrade Time or Height is
     * reached and the software will exit.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Sets the name for the upgrade. This name will be used by the upgraded
     * version of the software to apply any special "on-upgrade" commands during
     * the first BeginBlock method after the upgrade is applied. It is also used
     * to detect whether a software version can handle a given upgrade. If no
     * upgrade handler with this name has been set in the software, it will be
     * assumed that the software is out-of-date when the upgrade Time or Height is
     * reached and the software will exit.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Sets the name for the upgrade. This name will be used by the upgraded
     * version of the software to apply any special "on-upgrade" commands during
     * the first BeginBlock method after the upgrade is applied. It is also used
     * to detect whether a software version can handle a given upgrade. If no
     * upgrade handler with this name has been set in the software, it will be
     * assumed that the software is out-of-date when the upgrade Time or Height is
     * reached and the software will exit.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Sets the name for the upgrade. This name will be used by the upgraded
     * version of the software to apply any special "on-upgrade" commands during
     * the first BeginBlock method after the upgrade is applied. It is also used
     * to detect whether a software version can handle a given upgrade. If no
     * upgrade handler with this name has been set in the software, it will be
     * assumed that the software is out-of-date when the upgrade Time or Height is
     * reached and the software will exit.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Timestamp time_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timeBuilder_;
    /**
     * <pre>
     * The time after which the upgrade must be performed.
     * Leave set to its zero value to use a pre-defined Height instead.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    public boolean hasTime() {
      return timeBuilder_ != null || time_ != null;
    }
    /**
     * <pre>
     * The time after which the upgrade must be performed.
     * Leave set to its zero value to use a pre-defined Height instead.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    public com.google.protobuf.Timestamp getTime() {
      if (timeBuilder_ == null) {
        return time_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : time_;
      } else {
        return timeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The time after which the upgrade must be performed.
     * Leave set to its zero value to use a pre-defined Height instead.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    public Builder setTime(com.google.protobuf.Timestamp value) {
      if (timeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        time_ = value;
        onChanged();
      } else {
        timeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time after which the upgrade must be performed.
     * Leave set to its zero value to use a pre-defined Height instead.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    public Builder setTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (timeBuilder_ == null) {
        time_ = builderForValue.build();
        onChanged();
      } else {
        timeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The time after which the upgrade must be performed.
     * Leave set to its zero value to use a pre-defined Height instead.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    public Builder mergeTime(com.google.protobuf.Timestamp value) {
      if (timeBuilder_ == null) {
        if (time_ != null) {
          time_ =
            com.google.protobuf.Timestamp.newBuilder(time_).mergeFrom(value).buildPartial();
        } else {
          time_ = value;
        }
        onChanged();
      } else {
        timeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time after which the upgrade must be performed.
     * Leave set to its zero value to use a pre-defined Height instead.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    public Builder clearTime() {
      if (timeBuilder_ == null) {
        time_ = null;
        onChanged();
      } else {
        time_ = null;
        timeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The time after which the upgrade must be performed.
     * Leave set to its zero value to use a pre-defined Height instead.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    public com.google.protobuf.Timestamp.Builder getTimeBuilder() {
      
      onChanged();
      return getTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The time after which the upgrade must be performed.
     * Leave set to its zero value to use a pre-defined Height instead.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTimeOrBuilder() {
      if (timeBuilder_ != null) {
        return timeBuilder_.getMessageOrBuilder();
      } else {
        return time_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : time_;
      }
    }
    /**
     * <pre>
     * The time after which the upgrade must be performed.
     * Leave set to its zero value to use a pre-defined Height instead.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getTimeFieldBuilder() {
      if (timeBuilder_ == null) {
        timeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getTime(),
                getParentForChildren(),
                isClean());
        time_ = null;
      }
      return timeBuilder_;
    }

    private long height_ ;
    /**
     * <pre>
     * The height at which the upgrade must be performed.
     * Only used if Time is not set.
     * </pre>
     *
     * <code>int64 height = 3;</code>
     */
    public long getHeight() {
      return height_;
    }
    /**
     * <pre>
     * The height at which the upgrade must be performed.
     * Only used if Time is not set.
     * </pre>
     *
     * <code>int64 height = 3;</code>
     */
    public Builder setHeight(long value) {
      
      height_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The height at which the upgrade must be performed.
     * Only used if Time is not set.
     * </pre>
     *
     * <code>int64 height = 3;</code>
     */
    public Builder clearHeight() {
      
      height_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object info_ = "";
    /**
     * <pre>
     * Any application specific upgrade info to be included on-chain
     * such as a git commit that validators could automatically upgrade to
     * </pre>
     *
     * <code>string info = 4;</code>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        info_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Any application specific upgrade info to be included on-chain
     * such as a git commit that validators could automatically upgrade to
     * </pre>
     *
     * <code>string info = 4;</code>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Any application specific upgrade info to be included on-chain
     * such as a git commit that validators could automatically upgrade to
     * </pre>
     *
     * <code>string info = 4;</code>
     */
    public Builder setInfo(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      info_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any application specific upgrade info to be included on-chain
     * such as a git commit that validators could automatically upgrade to
     * </pre>
     *
     * <code>string info = 4;</code>
     */
    public Builder clearInfo() {
      
      info_ = getDefaultInstance().getInfo();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any application specific upgrade info to be included on-chain
     * such as a git commit that validators could automatically upgrade to
     * </pre>
     *
     * <code>string info = 4;</code>
     */
    public Builder setInfoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      info_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Any upgradedClientState_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> upgradedClientStateBuilder_;
    /**
     * <pre>
     * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan
     * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,
     * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the
     * previous version of the chain.
     * This will allow IBC connections to persist smoothly across planned chain upgrades
     * </pre>
     *
     * <code>.google.protobuf.Any upgraded_client_state = 5 [(.gogoproto.moretags) = "yaml:&#92;"upgraded_client_state&#92;""];</code>
     */
    public boolean hasUpgradedClientState() {
      return upgradedClientStateBuilder_ != null || upgradedClientState_ != null;
    }
    /**
     * <pre>
     * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan
     * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,
     * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the
     * previous version of the chain.
     * This will allow IBC connections to persist smoothly across planned chain upgrades
     * </pre>
     *
     * <code>.google.protobuf.Any upgraded_client_state = 5 [(.gogoproto.moretags) = "yaml:&#92;"upgraded_client_state&#92;""];</code>
     */
    public com.google.protobuf.Any getUpgradedClientState() {
      if (upgradedClientStateBuilder_ == null) {
        return upgradedClientState_ == null ? com.google.protobuf.Any.getDefaultInstance() : upgradedClientState_;
      } else {
        return upgradedClientStateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan
     * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,
     * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the
     * previous version of the chain.
     * This will allow IBC connections to persist smoothly across planned chain upgrades
     * </pre>
     *
     * <code>.google.protobuf.Any upgraded_client_state = 5 [(.gogoproto.moretags) = "yaml:&#92;"upgraded_client_state&#92;""];</code>
     */
    public Builder setUpgradedClientState(com.google.protobuf.Any value) {
      if (upgradedClientStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        upgradedClientState_ = value;
        onChanged();
      } else {
        upgradedClientStateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan
     * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,
     * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the
     * previous version of the chain.
     * This will allow IBC connections to persist smoothly across planned chain upgrades
     * </pre>
     *
     * <code>.google.protobuf.Any upgraded_client_state = 5 [(.gogoproto.moretags) = "yaml:&#92;"upgraded_client_state&#92;""];</code>
     */
    public Builder setUpgradedClientState(
        com.google.protobuf.Any.Builder builderForValue) {
      if (upgradedClientStateBuilder_ == null) {
        upgradedClientState_ = builderForValue.build();
        onChanged();
      } else {
        upgradedClientStateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan
     * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,
     * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the
     * previous version of the chain.
     * This will allow IBC connections to persist smoothly across planned chain upgrades
     * </pre>
     *
     * <code>.google.protobuf.Any upgraded_client_state = 5 [(.gogoproto.moretags) = "yaml:&#92;"upgraded_client_state&#92;""];</code>
     */
    public Builder mergeUpgradedClientState(com.google.protobuf.Any value) {
      if (upgradedClientStateBuilder_ == null) {
        if (upgradedClientState_ != null) {
          upgradedClientState_ =
            com.google.protobuf.Any.newBuilder(upgradedClientState_).mergeFrom(value).buildPartial();
        } else {
          upgradedClientState_ = value;
        }
        onChanged();
      } else {
        upgradedClientStateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan
     * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,
     * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the
     * previous version of the chain.
     * This will allow IBC connections to persist smoothly across planned chain upgrades
     * </pre>
     *
     * <code>.google.protobuf.Any upgraded_client_state = 5 [(.gogoproto.moretags) = "yaml:&#92;"upgraded_client_state&#92;""];</code>
     */
    public Builder clearUpgradedClientState() {
      if (upgradedClientStateBuilder_ == null) {
        upgradedClientState_ = null;
        onChanged();
      } else {
        upgradedClientState_ = null;
        upgradedClientStateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan
     * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,
     * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the
     * previous version of the chain.
     * This will allow IBC connections to persist smoothly across planned chain upgrades
     * </pre>
     *
     * <code>.google.protobuf.Any upgraded_client_state = 5 [(.gogoproto.moretags) = "yaml:&#92;"upgraded_client_state&#92;""];</code>
     */
    public com.google.protobuf.Any.Builder getUpgradedClientStateBuilder() {
      
      onChanged();
      return getUpgradedClientStateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan
     * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,
     * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the
     * previous version of the chain.
     * This will allow IBC connections to persist smoothly across planned chain upgrades
     * </pre>
     *
     * <code>.google.protobuf.Any upgraded_client_state = 5 [(.gogoproto.moretags) = "yaml:&#92;"upgraded_client_state&#92;""];</code>
     */
    public com.google.protobuf.AnyOrBuilder getUpgradedClientStateOrBuilder() {
      if (upgradedClientStateBuilder_ != null) {
        return upgradedClientStateBuilder_.getMessageOrBuilder();
      } else {
        return upgradedClientState_ == null ?
            com.google.protobuf.Any.getDefaultInstance() : upgradedClientState_;
      }
    }
    /**
     * <pre>
     * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan
     * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,
     * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the
     * previous version of the chain.
     * This will allow IBC connections to persist smoothly across planned chain upgrades
     * </pre>
     *
     * <code>.google.protobuf.Any upgraded_client_state = 5 [(.gogoproto.moretags) = "yaml:&#92;"upgraded_client_state&#92;""];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
        getUpgradedClientStateFieldBuilder() {
      if (upgradedClientStateBuilder_ == null) {
        upgradedClientStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                getUpgradedClientState(),
                getParentForChildren(),
                isClean());
        upgradedClientState_ = null;
      }
      return upgradedClientStateBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:cosmos.upgrade.v1beta1.Plan)
  }

  // @@protoc_insertion_point(class_scope:cosmos.upgrade.v1beta1.Plan)
  private static final cosmos.upgrade.v1beta1.Plan DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new cosmos.upgrade.v1beta1.Plan();
  }

  public static cosmos.upgrade.v1beta1.Plan getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Plan>
      PARSER = new com.google.protobuf.AbstractParser<Plan>() {
    @java.lang.Override
    public Plan parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Plan(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Plan> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Plan> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public cosmos.upgrade.v1beta1.Plan getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

