// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/upgrade/v1beta1/query.proto

package cosmos.upgrade.v1beta1;

/**
 * <pre>
 * QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
 * method.
 * </pre>
 *
 * Protobuf type {@code cosmos.upgrade.v1beta1.QueryCurrentPlanResponse}
 */
public  final class QueryCurrentPlanResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
    QueryCurrentPlanResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use QueryCurrentPlanResponse.newBuilder() to construct.
  private QueryCurrentPlanResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private QueryCurrentPlanResponse() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private QueryCurrentPlanResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            cosmos.upgrade.v1beta1.Plan.Builder subBuilder = null;
            if (plan_ != null) {
              subBuilder = plan_.toBuilder();
            }
            plan_ = input.readMessage(cosmos.upgrade.v1beta1.Plan.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(plan_);
              plan_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return cosmos.upgrade.v1beta1.QueryOuterClass.internal_static_cosmos_upgrade_v1beta1_QueryCurrentPlanResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return cosmos.upgrade.v1beta1.QueryOuterClass.internal_static_cosmos_upgrade_v1beta1_QueryCurrentPlanResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.class, cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.Builder.class);
  }

  public static final int PLAN_FIELD_NUMBER = 1;
  private cosmos.upgrade.v1beta1.Plan plan_;
  /**
   * <pre>
   * plan is the current upgrade plan.
   * </pre>
   *
   * <code>.cosmos.upgrade.v1beta1.Plan plan = 1;</code>
   */
  public boolean hasPlan() {
    return plan_ != null;
  }
  /**
   * <pre>
   * plan is the current upgrade plan.
   * </pre>
   *
   * <code>.cosmos.upgrade.v1beta1.Plan plan = 1;</code>
   */
  public cosmos.upgrade.v1beta1.Plan getPlan() {
    return plan_ == null ? cosmos.upgrade.v1beta1.Plan.getDefaultInstance() : plan_;
  }
  /**
   * <pre>
   * plan is the current upgrade plan.
   * </pre>
   *
   * <code>.cosmos.upgrade.v1beta1.Plan plan = 1;</code>
   */
  public cosmos.upgrade.v1beta1.PlanOrBuilder getPlanOrBuilder() {
    return getPlan();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (plan_ != null) {
      output.writeMessage(1, getPlan());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (plan_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getPlan());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)) {
      return super.equals(obj);
    }
    cosmos.upgrade.v1beta1.QueryCurrentPlanResponse other = (cosmos.upgrade.v1beta1.QueryCurrentPlanResponse) obj;

    if (hasPlan() != other.hasPlan()) return false;
    if (hasPlan()) {
      if (!getPlan()
          .equals(other.getPlan())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasPlan()) {
      hash = (37 * hash) + PLAN_FIELD_NUMBER;
      hash = (53 * hash) + getPlan().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(cosmos.upgrade.v1beta1.QueryCurrentPlanResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
   * method.
   * </pre>
   *
   * Protobuf type {@code cosmos.upgrade.v1beta1.QueryCurrentPlanResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
      cosmos.upgrade.v1beta1.QueryCurrentPlanResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.upgrade.v1beta1.QueryOuterClass.internal_static_cosmos_upgrade_v1beta1_QueryCurrentPlanResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.upgrade.v1beta1.QueryOuterClass.internal_static_cosmos_upgrade_v1beta1_QueryCurrentPlanResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.class, cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.Builder.class);
    }

    // Construct using cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (planBuilder_ == null) {
        plan_ = null;
      } else {
        plan_ = null;
        planBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return cosmos.upgrade.v1beta1.QueryOuterClass.internal_static_cosmos_upgrade_v1beta1_QueryCurrentPlanResponse_descriptor;
    }

    @java.lang.Override
    public cosmos.upgrade.v1beta1.QueryCurrentPlanResponse getDefaultInstanceForType() {
      return cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.getDefaultInstance();
    }

    @java.lang.Override
    public cosmos.upgrade.v1beta1.QueryCurrentPlanResponse build() {
      cosmos.upgrade.v1beta1.QueryCurrentPlanResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public cosmos.upgrade.v1beta1.QueryCurrentPlanResponse buildPartial() {
      cosmos.upgrade.v1beta1.QueryCurrentPlanResponse result = new cosmos.upgrade.v1beta1.QueryCurrentPlanResponse(this);
      if (planBuilder_ == null) {
        result.plan_ = plan_;
      } else {
        result.plan_ = planBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof cosmos.upgrade.v1beta1.QueryCurrentPlanResponse) {
        return mergeFrom((cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(cosmos.upgrade.v1beta1.QueryCurrentPlanResponse other) {
      if (other == cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.getDefaultInstance()) return this;
      if (other.hasPlan()) {
        mergePlan(other.getPlan());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      cosmos.upgrade.v1beta1.QueryCurrentPlanResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (cosmos.upgrade.v1beta1.QueryCurrentPlanResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private cosmos.upgrade.v1beta1.Plan plan_;
    private com.google.protobuf.SingleFieldBuilderV3<
        cosmos.upgrade.v1beta1.Plan, cosmos.upgrade.v1beta1.Plan.Builder, cosmos.upgrade.v1beta1.PlanOrBuilder> planBuilder_;
    /**
     * <pre>
     * plan is the current upgrade plan.
     * </pre>
     *
     * <code>.cosmos.upgrade.v1beta1.Plan plan = 1;</code>
     */
    public boolean hasPlan() {
      return planBuilder_ != null || plan_ != null;
    }
    /**
     * <pre>
     * plan is the current upgrade plan.
     * </pre>
     *
     * <code>.cosmos.upgrade.v1beta1.Plan plan = 1;</code>
     */
    public cosmos.upgrade.v1beta1.Plan getPlan() {
      if (planBuilder_ == null) {
        return plan_ == null ? cosmos.upgrade.v1beta1.Plan.getDefaultInstance() : plan_;
      } else {
        return planBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * plan is the current upgrade plan.
     * </pre>
     *
     * <code>.cosmos.upgrade.v1beta1.Plan plan = 1;</code>
     */
    public Builder setPlan(cosmos.upgrade.v1beta1.Plan value) {
      if (planBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        plan_ = value;
        onChanged();
      } else {
        planBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * plan is the current upgrade plan.
     * </pre>
     *
     * <code>.cosmos.upgrade.v1beta1.Plan plan = 1;</code>
     */
    public Builder setPlan(
        cosmos.upgrade.v1beta1.Plan.Builder builderForValue) {
      if (planBuilder_ == null) {
        plan_ = builderForValue.build();
        onChanged();
      } else {
        planBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * plan is the current upgrade plan.
     * </pre>
     *
     * <code>.cosmos.upgrade.v1beta1.Plan plan = 1;</code>
     */
    public Builder mergePlan(cosmos.upgrade.v1beta1.Plan value) {
      if (planBuilder_ == null) {
        if (plan_ != null) {
          plan_ =
            cosmos.upgrade.v1beta1.Plan.newBuilder(plan_).mergeFrom(value).buildPartial();
        } else {
          plan_ = value;
        }
        onChanged();
      } else {
        planBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * plan is the current upgrade plan.
     * </pre>
     *
     * <code>.cosmos.upgrade.v1beta1.Plan plan = 1;</code>
     */
    public Builder clearPlan() {
      if (planBuilder_ == null) {
        plan_ = null;
        onChanged();
      } else {
        plan_ = null;
        planBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * plan is the current upgrade plan.
     * </pre>
     *
     * <code>.cosmos.upgrade.v1beta1.Plan plan = 1;</code>
     */
    public cosmos.upgrade.v1beta1.Plan.Builder getPlanBuilder() {
      
      onChanged();
      return getPlanFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * plan is the current upgrade plan.
     * </pre>
     *
     * <code>.cosmos.upgrade.v1beta1.Plan plan = 1;</code>
     */
    public cosmos.upgrade.v1beta1.PlanOrBuilder getPlanOrBuilder() {
      if (planBuilder_ != null) {
        return planBuilder_.getMessageOrBuilder();
      } else {
        return plan_ == null ?
            cosmos.upgrade.v1beta1.Plan.getDefaultInstance() : plan_;
      }
    }
    /**
     * <pre>
     * plan is the current upgrade plan.
     * </pre>
     *
     * <code>.cosmos.upgrade.v1beta1.Plan plan = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        cosmos.upgrade.v1beta1.Plan, cosmos.upgrade.v1beta1.Plan.Builder, cosmos.upgrade.v1beta1.PlanOrBuilder> 
        getPlanFieldBuilder() {
      if (planBuilder_ == null) {
        planBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            cosmos.upgrade.v1beta1.Plan, cosmos.upgrade.v1beta1.Plan.Builder, cosmos.upgrade.v1beta1.PlanOrBuilder>(
                getPlan(),
                getParentForChildren(),
                isClean());
        plan_ = null;
      }
      return planBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
  }

  // @@protoc_insertion_point(class_scope:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
  private static final cosmos.upgrade.v1beta1.QueryCurrentPlanResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new cosmos.upgrade.v1beta1.QueryCurrentPlanResponse();
  }

  public static cosmos.upgrade.v1beta1.QueryCurrentPlanResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<QueryCurrentPlanResponse>
      PARSER = new com.google.protobuf.AbstractParser<QueryCurrentPlanResponse>() {
    @java.lang.Override
    public QueryCurrentPlanResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new QueryCurrentPlanResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<QueryCurrentPlanResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<QueryCurrentPlanResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public cosmos.upgrade.v1beta1.QueryCurrentPlanResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

