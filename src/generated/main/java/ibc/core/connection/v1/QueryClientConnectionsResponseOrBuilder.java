// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/core/connection/v1/query.proto

package ibc.core.connection.v1;

public interface QueryClientConnectionsResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ibc.core.connection.v1.QueryClientConnectionsResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * slice of all the connection paths associated with a client.
   * </pre>
   *
   * <code>repeated string connection_paths = 1;</code>
   */
  java.util.List<java.lang.String>
      getConnectionPathsList();
  /**
   * <pre>
   * slice of all the connection paths associated with a client.
   * </pre>
   *
   * <code>repeated string connection_paths = 1;</code>
   */
  int getConnectionPathsCount();
  /**
   * <pre>
   * slice of all the connection paths associated with a client.
   * </pre>
   *
   * <code>repeated string connection_paths = 1;</code>
   */
  java.lang.String getConnectionPaths(int index);
  /**
   * <pre>
   * slice of all the connection paths associated with a client.
   * </pre>
   *
   * <code>repeated string connection_paths = 1;</code>
   */
  com.google.protobuf.ByteString
      getConnectionPathsBytes(int index);

  /**
   * <pre>
   * merkle proof of existence
   * </pre>
   *
   * <code>bytes proof = 2;</code>
   */
  com.google.protobuf.ByteString getProof();

  /**
   * <pre>
   * height at which the proof was generated
   * </pre>
   *
   * <code>.ibc.core.client.v1.Height proof_height = 3 [(.gogoproto.nullable) = false];</code>
   */
  boolean hasProofHeight();
  /**
   * <pre>
   * height at which the proof was generated
   * </pre>
   *
   * <code>.ibc.core.client.v1.Height proof_height = 3 [(.gogoproto.nullable) = false];</code>
   */
  ibc.core.client.v1.Height getProofHeight();
  /**
   * <pre>
   * height at which the proof was generated
   * </pre>
   *
   * <code>.ibc.core.client.v1.Height proof_height = 3 [(.gogoproto.nullable) = false];</code>
   */
  ibc.core.client.v1.HeightOrBuilder getProofHeightOrBuilder();
}
