// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tendermint/p2p/types.proto

package tendermint.p2p;

public final class Types {
  private Types() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tendermint_p2p_NetAddress_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tendermint_p2p_NetAddress_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tendermint_p2p_ProtocolVersion_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tendermint_p2p_ProtocolVersion_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tendermint_p2p_DefaultNodeInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tendermint_p2p_DefaultNodeInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tendermint_p2p_DefaultNodeInfoOther_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tendermint_p2p_DefaultNodeInfoOther_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032tendermint/p2p/types.proto\022\016tendermint" +
      ".p2p\032\024gogoproto/gogo.proto\"B\n\nNetAddress" +
      "\022\022\n\002id\030\001 \001(\tB\006\342\336\037\002ID\022\022\n\002ip\030\002 \001(\tB\006\342\336\037\002IP" +
      "\022\014\n\004port\030\003 \001(\r\"C\n\017ProtocolVersion\022\024\n\003p2p" +
      "\030\001 \001(\004B\007\342\336\037\003P2P\022\r\n\005block\030\002 \001(\004\022\013\n\003app\030\003 " +
      "\001(\004\"\223\002\n\017DefaultNodeInfo\022?\n\020protocol_vers" +
      "ion\030\001 \001(\0132\037.tendermint.p2p.ProtocolVersi" +
      "onB\004\310\336\037\000\022*\n\017default_node_id\030\002 \001(\tB\021\342\336\037\rD" +
      "efaultNodeID\022\023\n\013listen_addr\030\003 \001(\t\022\017\n\007net" +
      "work\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\020\n\010channels\030" +
      "\006 \001(\014\022\017\n\007moniker\030\007 \001(\t\0229\n\005other\030\010 \001(\0132$." +
      "tendermint.p2p.DefaultNodeInfoOtherB\004\310\336\037" +
      "\000\"M\n\024DefaultNodeInfoOther\022\020\n\010tx_index\030\001 " +
      "\001(\t\022#\n\013rpc_address\030\002 \001(\tB\016\342\336\037\nRPCAddress" +
      "B9P\001Z5github.com/tendermint/tendermint/p" +
      "roto/tendermint/p2pb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.GoGoProtos.getDescriptor(),
        }, assigner);
    internal_static_tendermint_p2p_NetAddress_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tendermint_p2p_NetAddress_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tendermint_p2p_NetAddress_descriptor,
        new java.lang.String[] { "Id", "Ip", "Port", });
    internal_static_tendermint_p2p_ProtocolVersion_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tendermint_p2p_ProtocolVersion_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tendermint_p2p_ProtocolVersion_descriptor,
        new java.lang.String[] { "P2P", "Block", "App", });
    internal_static_tendermint_p2p_DefaultNodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tendermint_p2p_DefaultNodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tendermint_p2p_DefaultNodeInfo_descriptor,
        new java.lang.String[] { "ProtocolVersion", "DefaultNodeId", "ListenAddr", "Network", "Version", "Channels", "Moniker", "Other", });
    internal_static_tendermint_p2p_DefaultNodeInfoOther_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tendermint_p2p_DefaultNodeInfoOther_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tendermint_p2p_DefaultNodeInfoOther_descriptor,
        new java.lang.String[] { "TxIndex", "RpcAddress", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf.GoGoProtos.customname);
    registry.add(com.google.protobuf.GoGoProtos.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.GoGoProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
