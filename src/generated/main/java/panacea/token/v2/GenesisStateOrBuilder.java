// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: panacea/token/v2/genesis.proto

package panacea.token.v2;

public interface GenesisStateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:panacea.token.v2.GenesisState)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * this line is used by starport scaffolding # genesis/proto/state
   * </pre>
   *
   * <code>map&lt;string, .panacea.token.v2.Token&gt; tokens = 1;</code>
   */
  int getTokensCount();
  /**
   * <pre>
   * this line is used by starport scaffolding # genesis/proto/state
   * </pre>
   *
   * <code>map&lt;string, .panacea.token.v2.Token&gt; tokens = 1;</code>
   */
  boolean containsTokens(
      java.lang.String key);
  /**
   * Use {@link #getTokensMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, panacea.token.v2.Token>
  getTokens();
  /**
   * <pre>
   * this line is used by starport scaffolding # genesis/proto/state
   * </pre>
   *
   * <code>map&lt;string, .panacea.token.v2.Token&gt; tokens = 1;</code>
   */
  java.util.Map<java.lang.String, panacea.token.v2.Token>
  getTokensMap();
  /**
   * <pre>
   * this line is used by starport scaffolding # genesis/proto/state
   * </pre>
   *
   * <code>map&lt;string, .panacea.token.v2.Token&gt; tokens = 1;</code>
   */

  panacea.token.v2.Token getTokensOrDefault(
      java.lang.String key,
      panacea.token.v2.Token defaultValue);
  /**
   * <pre>
   * this line is used by starport scaffolding # genesis/proto/state
   * </pre>
   *
   * <code>map&lt;string, .panacea.token.v2.Token&gt; tokens = 1;</code>
   */

  panacea.token.v2.Token getTokensOrThrow(
      java.lang.String key);
}
